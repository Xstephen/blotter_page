{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/popconfirm/style/css\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { Icon } from '@ant-design/compatible';\nimport Container from '@/components/container';\nimport TagPart from '@/components/tag';\nimport { Context } from '@/utils/global';\nimport { adminTags, tagDelete, tagEdit } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\nimport { waitUntil } from '@/utils/debounce';\nimport randomString from '@/utils/random';\nvar defaultSortField = 'count';\nvar defaultSortInc = false;\n\nvar AdminTagList = /*#__PURE__*/function (_React$Component) {\n  _inherits(AdminTagList, _React$Component);\n\n  function AdminTagList(props) {\n    var _this;\n\n    _classCallCheck(this, AdminTagList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminTagList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", function _callee(keyword, size) {\n      var page,\n          field,\n          up,\n          r,\n          _args = arguments;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              page = _args.length > 2 && _args[2] !== undefined ? _args[2] : 1;\n              field = _args.length > 3 && _args[3] !== undefined ? _args[3] : defaultSortField;\n              up = _args.length > 4 && _args[4] !== undefined ? _args[4] : defaultSortInc;\n\n              _this.setState({\n                loading: true,\n                page: page,\n                size: size\n              });\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(adminTags(keyword, page, size, field, up));\n\n            case 6:\n              r = _context.sent;\n\n              _this.setState({\n                data: r.tags,\n                total: r.total,\n                loading: false\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderEditableCell\", function (idx, key) {\n      var width = _this.columns.find(function (item) {\n        return item.key == key;\n      }).width;\n\n      var padding = 16;\n      var style = {\n        width: undefined\n      };\n\n      if (typeof width === 'number') {\n        style.width = width - padding * 2;\n      } else {\n        style.width = \"calc(width - \".concat(padding * 2, \"px)\");\n      }\n\n      return __jsx(\"div\", {\n        style: style\n      }, __jsx(_Typography.Text, {\n        style: {\n          width: '100%'\n        },\n        ellipsis: true,\n        editable: {\n          onChange: function onChange(value) {\n            _this.setState(function (state) {\n              var data = state.data;\n              data[idx][key] = value;\n              return {\n                data: data\n              };\n            });\n          }\n        }\n      }, _this.state.data[idx][key]));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"columns\", [{\n      title: '名称',\n      key: 'name',\n      dataIndex: 'name',\n      sorter: true,\n      width: 200,\n      ellipsis: true,\n      render: function render(_, __, idx) {\n        return _this.renderEditableCell(idx, 'name');\n      }\n    }, {\n      title: '链接',\n      key: 'short',\n      dataIndex: 'short',\n      sorter: true,\n      width: 200,\n      ellipsis: true,\n      render: function render(_, __, idx) {\n        return _this.renderEditableCell(idx, 'short');\n      }\n    }, {\n      title: '图标',\n      key: 'icon',\n      dataIndex: 'icon',\n      sorter: true,\n      width: 200,\n      ellipsis: true,\n      render: function render(_, __, idx) {\n        return _this.renderEditableCell(idx, 'icon');\n      }\n    }, {\n      title: '颜色',\n      key: 'color',\n      dataIndex: 'color',\n      sorter: true,\n      width: 150,\n      ellipsis: true,\n      render: function render(_, __, idx) {\n        return _this.renderEditableCell(idx, 'color');\n      }\n    }, {\n      title: '预览',\n      key: 'view',\n      dataIndex: 'view',\n      width: 100,\n      ellipsis: true,\n      render: function render(_, record, __) {\n        return __jsx(TagPart, {\n          tag: record\n        });\n      }\n    }, {\n      title: '文章个数',\n      key: 'count',\n      dataIndex: 'count',\n      width: 120,\n      ellipsis: true\n    }, {\n      title: '操作',\n      key: 'op',\n      render: function render(_, record, idx) {\n        return __jsx(\"div\", {\n          style: {\n            whiteSpace: 'nowrap'\n          }\n        }, __jsx(_Button, {\n          size: \"small\",\n          onClick: function onClick() {\n            return _this.onEdit(idx);\n          }\n        }, __jsx(Icon, {\n          type: \"edit\"\n        }), \"\\u4FEE\\u6539\"), ' ', __jsx(_Popconfirm, {\n          title: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\",\n          onConfirm: function onConfirm() {\n            _this.onDelete(record.id);\n          },\n          okText: \"\\u5220\\u9664\\uFF01\",\n          cancelText: \"\\u7B97\\u4E86\"\n        }, __jsx(_Button, {\n          size: \"small\",\n          type: \"danger\"\n        }, __jsx(Icon, {\n          type: \"delete\"\n        }), \"\\u5220\\u9664\")));\n      }\n    }]);\n\n    _defineProperty(_assertThisInitialized(_this), \"onInsert\", function () {\n      _this.setState(function (state) {\n        var data = state.data;\n        data.unshift({\n          id: '',\n          name: randomString(),\n          \"short\": randomString(),\n          color: '',\n          icon: '',\n          count: 0\n        });\n        data = data.map(function (d) {\n          return d;\n        });\n        return {\n          data: data\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEdit\", function _callee2(idx) {\n      var tag, r;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tag = _this.state.data[idx];\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(tagEdit(tag.id, tag.name, tag[\"short\"], tag.color, tag.icon));\n\n            case 3:\n              r = _context2.sent;\n              ShowNotification(r);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDelete\", function _callee3(id) {\n      var r;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(tagDelete(id));\n\n            case 2:\n              r = _context3.sent;\n              ShowNotification(r);\n\n              _this.setState(function (state) {\n                return {\n                  data: state.data.filter(function (tag) {\n                    return tag.id != id;\n                  })\n                };\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"searchOnChange\", function (e) {\n      var value = e.target.value;\n      waitUntil('admin_tags_search', function () {\n        _this.setState(function (state) {\n          return {\n            page: 1,\n            keyword: value\n          };\n        });\n\n        _this.getData(value, _this.state.size);\n      }, 1000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTableChange\", function (pagination, filters, sorter, extra) {\n      var current = pagination.current,\n          pageSize = pagination.pageSize;\n      var field = sorter.field,\n          order = sorter.order;\n      var defaultSort = typeof order === 'undefined';\n\n      _this.getData(_this.state.keyword, pageSize, current, defaultSort ? defaultSortField : \"\".concat(field), defaultSort ? defaultSortInc : order === 'ascend');\n    });\n\n    _this.state = {\n      loading: false,\n      pagination: {},\n      data: [],\n      total: 0,\n      page: 1,\n      size: 10,\n      keyword: ''\n    };\n    return _this;\n  }\n\n  _createClass(AdminTagList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData('', 10);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, {\n        lg: 20,\n        md: 20,\n        sm: 24,\n        xs: 24\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u6807\\u7B7E\\u5217\\u8868|\\u540E\\u53F0|\".concat(context.blog_name)));\n      }), __jsx(_Card, null, __jsx(_Form, {\n        layout: \"inline\"\n      }, __jsx(_Form.Item, {\n        wrapperCol: {\n          md: 20,\n          sm: 24\n        }\n      }, __jsx(_Input, {\n        placeholder: \"\\u641C\\u7D22\\u6807\\u7B7E\",\n        onChange: this.searchOnChange\n      })), __jsx(_Form.Item, {\n        wrapperCol: {\n          md: 4,\n          sm: 24\n        }\n      }, __jsx(_Button, {\n        type: \"primary\",\n        onClick: this.onInsert\n      }, __jsx(Icon, {\n        type: \"plus\"\n      }), \"\\u65B0\\u5EFA\\u6807\\u7B7E\"))), __jsx(_Table, {\n        rowKey: function rowKey(record) {\n          return record.id;\n        },\n        columns: this.columns,\n        scroll: {\n          x: true\n        },\n        dataSource: this.state.data,\n        loading: this.state.loading,\n        onChange: this.onTableChange,\n        pagination: {\n          current: this.state.page,\n          total: this.state.total,\n          pageSize: this.state.size,\n          showSizeChanger: true\n        }\n      })));\n    }\n  }]);\n\n  return AdminTagList;\n}(React.Component);\n\n_defineProperty(AdminTagList, \"defaultProps\", {});\n\nexport default AdminTagList;","map":null,"metadata":{},"sourceType":"module"}