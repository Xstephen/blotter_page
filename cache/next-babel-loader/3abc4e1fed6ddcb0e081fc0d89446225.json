{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/popconfirm/style/css\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { Icon } from '@ant-design/compatible';\nimport Container from '@/components/container';\nimport { menus, menusSet } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport ShowNotification from '@/utils/notification';\nimport DragableTable from '@/components/dragable_table';\n\nvar AdminMenus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminMenus, _React$Component);\n\n  function AdminMenus(props) {\n    var _this;\n\n    _classCallCheck(this, AdminMenus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminMenus).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", function _callee() {\n      var r;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(menus());\n\n            case 3:\n              r = _context.sent;\n\n              _this.setState({\n                data: r,\n                loading: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderEditableCell\", function (idx, key) {\n      return __jsx(_Typography.Text, {\n        editable: {\n          onChange: function onChange(value) {\n            _this.setState(function (state) {\n              var data = state.data;\n              data[idx][key] = value;\n              return {\n                data: data\n              };\n            });\n          }\n        }\n      }, _this.state.data[idx][key]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"columns\", [{\n      dataIndex: 'name',\n      key: 'name',\n      title: '名称',\n      render: function render(_, __, idx) {\n        return _this.renderEditableCell(idx, 'name');\n      }\n    }, {\n      dataIndex: 'link',\n      key: 'link',\n      title: '链接',\n      render: function render(_, __, idx) {\n        return _this.renderEditableCell(idx, 'link');\n      }\n    }, {\n      dataIndex: 'icon',\n      key: 'icon',\n      title: '图标',\n      render: function render(_, __, idx) {\n        return _this.renderEditableCell(idx, 'icon');\n      }\n    }, {\n      //   dataIndex: 'icon',\n      key: 'preview',\n      title: '预览',\n      render: function render(value, record) {\n        return __jsx(Icon, {\n          type: record.icon\n        });\n      }\n    }, {\n      key: 'op',\n      title: '操作',\n      render: function render(_, record, idx) {\n        return __jsx(_Popconfirm, {\n          title: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\",\n          onConfirm: function onConfirm() {\n            _this.setState(function (state) {\n              var data = state.data;\n              data = data.filter(function (item) {\n                return item.name !== record.name;\n              });\n              data.map(function (d) {\n                return d;\n              });\n              return {\n                data: data\n              };\n            });\n          },\n          okText: \"\\u5220\\u9664\\uFF01\",\n          cancelText: \"\\u7B97\\u4E86\"\n        }, __jsx(_Button, {\n          size: \"small\",\n          type: \"danger\"\n        }, __jsx(Icon, {\n          type: \"delete\"\n        }), \"\\u5220\\u9664\"));\n      }\n    }]);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTableHead\", function () {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: 'right'\n        }\n      }, __jsx(_Button, {\n        onClick: function onClick() {\n          _this.setState(function (state) {\n            var data = state.data;\n            data.push({\n              name: '',\n              link: '',\n              icon: ''\n            });\n            data = data.map(function (d) {\n              return d;\n            });\n            return {\n              data: data\n            };\n          });\n        }\n      }, __jsx(Icon, {\n        type: \"plus\"\n      }), \"\\u65B0\\u5EFA\"), ' ', __jsx(_Button, {\n        type: \"primary\",\n        loading: _this.state.submitLoading,\n        onClick: function _callee2() {\n          var r;\n          return _regeneratorRuntime.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this.setState({\n                    submitLoading: true\n                  });\n\n                  _context2.next = 3;\n                  return _regeneratorRuntime.awrap(menusSet(_this.state.data));\n\n                case 3:\n                  r = _context2.sent;\n                  ShowNotification(r);\n\n                  _this.setState({\n                    submitLoading: false\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          });\n        }\n      }, __jsx(Icon, {\n        type: \"save\"\n      }), \"\\u4FDD\\u5B58\\u4FEE\\u6539\"));\n    });\n\n    _this.state = {\n      loading: false,\n      data: [],\n      submitLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(AdminMenus, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Container, {\n        lg: 20,\n        md: 20,\n        sm: 24,\n        xs: 24\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u53CB\\u94FE\\u5217\\u8868|\\u540E\\u53F0|\".concat(context.blog_name)));\n      }), __jsx(_Card, null, __jsx(DragableTable, {\n        columns: this.columns,\n        dataSource: this.state.data,\n        loading: this.state.loading,\n        pagination: false,\n        title: function title() {\n          return _this2.renderTableHead();\n        },\n        rowKey: function rowKey(col, idx) {\n          return \"\".concat(col.name, \"_\").concat(idx);\n        },\n        dragKey: \"root\",\n        moveRow: function moveRow(i, j) {\n          _this2.setState(function (state) {\n            var data = state.data;\n            var temp = data[i];\n            data[i] = data[j];\n            data[j] = temp;\n            data = data.map(function (d) {\n              return d;\n            });\n            return {\n              data: data\n            };\n          });\n        },\n        size: \"large\"\n      })));\n    }\n  }]);\n\n  return AdminMenus;\n}(React.Component);\n\n_defineProperty(AdminMenus, \"defaultProps\", {});\n\nexport default AdminMenus;","map":null,"metadata":{},"sourceType":"module"}