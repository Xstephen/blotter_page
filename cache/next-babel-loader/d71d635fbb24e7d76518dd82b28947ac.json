{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport initialWASM from '@/utils/wasm';\n\nfunction initialCrypto(callback) {\n  return _regeneratorRuntime.async(function initialCrypto$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(initialWASM('/static/crypto.wasm', 'ohyee_crypto', callback));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default initialCrypto;","map":null,"metadata":{},"sourceType":"module"}