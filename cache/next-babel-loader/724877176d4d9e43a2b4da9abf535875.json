{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { getCookie } from '@/utils/cookies';\nimport { Context, defaultContext } from '@/utils/global';\nimport BasicLayout from '@/components/layout';\nconst Layout = BasicLayout;\nimport ErrorPage from '@/pages/_error';\nimport { view } from '@/utils/api';\nexport default class MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, defaultContext, {}, this.props.globalProps, {\n      token: getCookie('token'),\n      callback: (props, callback) => {\n        this.setState(props, callback);\n      }\n    });\n  }\n\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    const isServer = !!ctx.req;\n    var globalProps = defaultContext;\n    var pageProps = {};\n    var status = 0;\n    var message = '';\n\n    try {\n      if (isServer && Layout.getInitialProps) {\n        globalProps = await Layout.getInitialProps(ctx);\n      }\n\n      if (Component.getInitialProps) {\n        pageProps = await Component.getInitialProps(ctx);\n      }\n    } catch (e) {\n      console.log(e);\n\n      if (e.response && e.response.status && ctx.res) {\n        ctx.res.statusCode = status = e.response.status;\n        message = e.response.body;\n      }\n    }\n\n    return {\n      pageProps,\n      globalProps,\n      status,\n      message\n    };\n  }\n\n  componentDidMount() {\n    view();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Context.Provider, {\n      value: this.state\n    }, __jsx(Head, null, __jsx(\"title\", null, this.state.blog_name)), __jsx(Layout, null, this.props.status != 0 ? __jsx(ErrorPage, {\n      status: this.props.status\n    }) : __jsx(Component, pageProps)));\n  }\n\n}\n\n_defineProperty(MyApp, \"contextType\", Context);","map":null,"metadata":{},"sourceType":"module"}