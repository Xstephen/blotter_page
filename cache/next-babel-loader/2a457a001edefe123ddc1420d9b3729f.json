{"ast":null,"code":"async function initialWASM(url, pkgName, callback) {\n  if (!WebAssembly.instantiateStreaming) {\n    // polyfill\n    WebAssembly.instantiateStreaming = async (resp, importObject) => {\n      const source = await (await resp).arrayBuffer();\n      return await WebAssembly.instantiate(source, importObject);\n    };\n  }\n\n  const go = new window.global.Go();\n  let mod, inst;\n\n  try {\n    const result = await WebAssembly.instantiateStreaming(fetch(url), go.importObject);\n    mod = result.module;\n    inst = result.instance;\n    go.run(inst);\n    return window.global[pkgName];\n  } catch (err) {\n    console.error(err);\n    if (!!callback) callback();\n    throw err;\n  }\n}\n\nexport default initialWASM;","map":null,"metadata":{},"sourceType":"module"}