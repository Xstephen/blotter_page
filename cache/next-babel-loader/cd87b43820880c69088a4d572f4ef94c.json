{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/popconfirm/style/css\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Container from '@/components/container';\nimport { friends, friendsSet } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport ShowNotification from '@/utils/notification';\nimport DraggableTable from '@/components/draggable_table';\nvar defaultSortField = 'count';\nvar defaultSortInc = false;\n\nvar AdminTagList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminTagList, _React$Component);\n\n  function AdminTagList(props) {\n    var _this;\n\n    _classCallCheck(this, AdminTagList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminTagList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", function _callee() {\n      var r;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(friends());\n\n            case 3:\n              r = _context.sent;\n\n              _this.setState({\n                data: r,\n                loading: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderEditableCell\", function (key, data, idx) {\n      return __jsx(_Typography.Text, {\n        editable: {\n          onChange: function onChange(value) {\n            _this.setState(function (state) {\n              state.data[idx][key] = value;\n              return {\n                data: state.data\n              };\n            });\n\n            data[key] = value;\n          }\n        }\n      }, data[key]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"columns\", [{\n      title: '名称',\n      key: 'name',\n      dataIndex: 'name',\n      width: '15%',\n      render: function render(_, record, idx) {\n        return _this.renderEditableCell('name', record, idx);\n      }\n    }, {\n      title: '简介',\n      key: 'description',\n      dataIndex: 'description',\n      width: '30%',\n      render: function render(_, record, idx) {\n        return _this.renderEditableCell('description', record, idx);\n      }\n    }, {\n      title: '链接',\n      key: 'link',\n      dataIndex: 'link',\n      width: '15%',\n      render: function render(_, record, idx) {\n        return _this.renderEditableCell('link', record, idx);\n      }\n    }, {\n      title: '图片',\n      key: 'image',\n      dataIndex: 'image',\n      width: '15%',\n      render: function render(_, record, idx) {\n        return _this.renderEditableCell('image', record, idx);\n      }\n    }, {\n      title: '图片预览',\n      key: 'image_preview',\n      width: '10%',\n      render: function render(_, record, idx) {\n        return __jsx(\"img\", {\n          width: '50px',\n          src: record.image\n        });\n      }\n    }, {\n      title: '操作',\n      key: 'op',\n      width: '20%',\n      render: function render(text, record, index) {\n        return __jsx(_Popconfirm, {\n          title: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\",\n          onConfirm: function onConfirm() {\n            _this.setState(function (state) {\n              var data = state.data.filter(function (item) {\n                return item.name !== record.name;\n              });\n              return {\n                data: data\n              };\n            });\n          },\n          okText: \"\\u5220\\u9664\\uFF01\",\n          cancelText: \"\\u7B97\\u4E86\"\n        }, __jsx(_Button, {\n          size: \"small\",\n          type: \"danger\"\n        }, __jsx(_Icon, {\n          type: \"delete\"\n        }), \"\\u5220\\u9664\"));\n      }\n    }]);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSubTableHead\", function (index) {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: 'right'\n        }\n      }, __jsx(_Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          _this.setState(function (state) {\n            state.data[index].posts.unshift({\n              title: '',\n              link: ''\n            });\n            return state;\n          });\n        }\n      }, __jsx(_Icon, {\n        type: \"plus\"\n      }), \"\\u65B0\\u5EFA\\u6587\\u7AE0\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTableHead\", function () {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: 'right'\n        }\n      }, __jsx(_Button, {\n        onClick: function onClick() {\n          _this.setState(function (state) {\n            state.data.unshift({\n              name: '',\n              link: '',\n              image: '',\n              description: '',\n              posts: []\n            });\n            return state;\n          });\n        }\n      }, __jsx(_Icon, {\n        type: \"plus\"\n      }), \"\\u65B0\\u5EFA\\u53CB\\u94FE\"), ' ', __jsx(_Button, {\n        type: \"primary\",\n        loading: _this.state.submitLoading,\n        onClick: function _callee2() {\n          var r;\n          return _regeneratorRuntime.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this.setState({\n                    submitLoading: true\n                  });\n\n                  _context2.next = 3;\n                  return _regeneratorRuntime.awrap(friendsSet(_this.state.data));\n\n                case 3:\n                  r = _context2.sent;\n                  ShowNotification(r);\n\n                  _this.setState({\n                    submitLoading: false\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          });\n        }\n      }, __jsx(_Icon, {\n        type: \"save\"\n      }), \"\\u4FDD\\u5B58\\u4FEE\\u6539\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderExpand\", function (record, index, indent, expanded) {\n      var columns = [{\n        title: '标题',\n        dataIndex: 'title',\n        width: '30%',\n        render: function render(_, record, idx) {\n          return _this.renderEditableCell('title', record, idx);\n        }\n      }, {\n        title: '链接',\n        dataIndex: 'link',\n        width: '50%',\n        render: function render(_, record, idx) {\n          return _this.renderEditableCell('link', record, idx);\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'op',\n        width: '20%',\n        render: function render(_, record, idx) {\n          return __jsx(_Popconfirm, {\n            title: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\",\n            onConfirm: function onConfirm() {\n              _this.setState(function (state) {\n                var data = state.data;\n                data[index].posts = data[index].posts.filter(function (item) {\n                  return item.title !== record.title;\n                });\n                return {\n                  data: data\n                };\n              });\n            },\n            okText: \"\\u5220\\u9664\\uFF01\",\n            cancelText: \"\\u7B97\\u4E86\"\n          }, __jsx(_Button, {\n            size: \"small\",\n            type: \"danger\"\n          }, __jsx(_Icon, {\n            type: \"delete\"\n          }), \"\\u5220\\u9664\"));\n        }\n      }];\n      return __jsx(DraggableTable, {\n        columns: columns,\n        dataSource: record.posts,\n        pagination: false,\n        showHeader: false,\n        title: function title() {\n          return _this.renderSubTableHead(index);\n        },\n        size: \"small\",\n        moveRow: function moveRow(i, j) {\n          _this.setState(function (state) {\n            var data = state.data;\n            var temp = data[index].posts[i];\n            data[index].posts[i] = data[index].posts[j];\n            data[index].posts[j] = temp;\n            return {\n              data: data\n            };\n          });\n        }\n      });\n    });\n\n    _this.state = {\n      loading: false,\n      data: [],\n      submitLoading: false\n    };\n\n    _this.getData();\n\n    return _this;\n  }\n\n  _createClass(AdminTagList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Container, {\n        lg: 20,\n        md: 20,\n        sm: 24,\n        xs: 24\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u6807\\u7B7E\\u5217\\u8868|\\u540E\\u53F0|\".concat(context.blog_name)));\n      }), __jsx(_Card, null, __jsx(DraggableTable, {\n        columns: this.columns,\n        dataSource: this.state.data,\n        loading: this.state.loading,\n        pagination: false,\n        expandedRowRender: this.renderExpand,\n        title: function title() {\n          return _this2.renderTableHead();\n        },\n        rowKey: function rowKey(col) {\n          return col.name;\n        },\n        moveRow: function moveRow(i, j) {\n          _this2.setState(function (state) {\n            var data = state.data;\n            var temp = data[i];\n            data[i] = data[j];\n            data[j] = temp;\n            return {\n              data: data\n            };\n          });\n        },\n        size: \"small\"\n      })));\n    }\n  }]);\n\n  return AdminTagList;\n}(React.Component);\n\n_defineProperty(AdminTagList, \"defaultProps\", {});\n\nexport default AdminTagList;","map":null,"metadata":{},"sourceType":"module"}