{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Icon } from '@ant-design/compatible';\nimport Container from '@/components/container';\nimport PostList from '@/components/post_list';\nimport { Context } from '@/utils/global';\nimport { indexPosts, tagsSearch } from '@/utils/api';\nimport { waitUntil } from '@/utils/debounce';\nimport TagPart from '@/components/tag';\n\nclass Index extends React.Component {\n  static async getInitialProps(args) {\n    var data = await indexPosts('', 1, 5);\n    return {\n      posts: data.posts\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onChange\", e => {\n      var value = e.target.value;\n      waitUntil('index_search', () => {\n        this.getPosts(value, 1, 10);\n      }, 1000);\n    });\n\n    _defineProperty(this, \"onPageChange\", (page, size) => {\n      if (typeof size === 'undefined') {\n        size = this.state.size;\n      }\n\n      this.getPosts(this.state.search, page, size);\n    });\n\n    _defineProperty(this, \"getPosts\", async (search, page, size) => {\n      if (search == '') {\n        this.setState({\n          posts: this.props.posts,\n          total: 0,\n          search: '',\n          callback: undefined,\n          tags: []\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        var data = await indexPosts(search, page, size);\n        var r = await tagsSearch(search);\n        this.setState({\n          posts: data.posts,\n          total: data.total,\n          loading: false,\n          page: page,\n          size: size,\n          search: search,\n          callback: this.onPageChange,\n          tags: r.tags\n        });\n      }\n    });\n\n    this.state = {\n      posts: this.props.posts,\n      total: 0,\n      loading: false,\n      page: 1,\n      size: 10,\n      search: '',\n      tags: []\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `首页|${context.blog_name}`))), __jsx(Container, {\n      lg: 14,\n      md: 18\n    }, __jsx(_Card, {\n      className: \"shadow\"\n    }, __jsx(_Input, {\n      placeholder: \"\\u641C\\u7D22\\u6587\\u7AE0\",\n      onChange: this.onChange,\n      allowClear: true,\n      prefix: __jsx(Icon, {\n        type: \"search\"\n      }),\n      size: \"large\"\n    }))), __jsx(Container, null, this.state.tags.map(tag => __jsx(TagPart, {\n      tag: tag,\n      key: tag.short\n    })), __jsx(PostList, {\n      posts: this.state.posts,\n      header: this.state.total == 0 ? undefined : `共${this.state.total}条搜索结果`,\n      loading: this.state.loading,\n      page: this.state.page,\n      size: this.state.size,\n      total: this.state.total,\n      callback: this.state.callback\n    }), __jsx(\"div\", {\n      style: {\n        textAlign: 'center'\n      }\n    }, __jsx(Link, {\n      href: \"/archives\"\n    }, __jsx(_Button, {\n      type: \"dashed\",\n      style: {\n        background: 'transparent'\n      }\n    }, \"\\u67E5\\u770B\\u66F4\\u591A\")))));\n  }\n\n}\n\n_defineProperty(Index, \"defaultProps\", {\n  posts: []\n});\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}