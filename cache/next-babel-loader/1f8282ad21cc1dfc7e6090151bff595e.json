{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/space/style/css\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport \"antd/lib/avatar/style/css\";\nimport _Avatar from \"antd/lib/avatar\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport Container from '@/components/container';\nimport { Context, defaultContext } from '@/utils/global';\nimport { info, userSet } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\nimport If from '@/components/if';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"getData\", async () => {\n      const user = await info(this.props.router.query.username);\n      this.setState({\n        user\n      });\n    });\n\n    _defineProperty(this, \"onChange\", (key, value) => {\n      this.setState(state => {\n        var {\n          user\n        } = state;\n        user[key] = value;\n        return {\n          user\n        };\n      });\n    });\n\n    _defineProperty(this, \"update\", async () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        username,\n        email,\n        ns,\n        qq,\n        avatar\n      } = this.state.user;\n      const r = await userSet(username, email, avatar, ns, qq, this.state.password);\n      ShowNotification(r);\n      this.setState({\n        loading: false\n      });\n    });\n\n    this.state = {\n      user: defaultContext.user,\n      loading: false,\n      password: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const self = this.context.user.id == this.state.user.id;\n    const fields = [{\n      key: 'avatar',\n      name: '头像',\n      self: true\n    }, {\n      key: 'username',\n      name: '用户名',\n      self: false\n    }, {\n      key: 'ns',\n      name: 'NS 账户',\n      self: false\n    }, {\n      key: 'email',\n      name: '邮箱',\n      self: false\n    }, {\n      key: 'qq',\n      name: 'qq号',\n      self: false\n    }];\n    return __jsx(Container, null, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `${this.props.router.query.username}|用户页|${context.blog_name}`))), __jsx(_Card, null, __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      }\n    }, __jsx(_Avatar, {\n      size: 128,\n      src: this.state.user.avatar\n    })), __jsx(_List, {\n      dataSource: fields,\n      renderItem: item => __jsx(_List.Item, {\n        key: item.key\n      }, __jsx(_Row, {\n        style: {\n          width: '100%'\n        }\n      }, __jsx(_Col, {\n        span: 4\n      }, __jsx(_Typography.Text, {\n        strong: true\n      }, item.name)), __jsx(_Col, {\n        span: 20\n      }, __jsx(_Typography.Text, {\n        copyable: true,\n        editable: self ? {\n          onChange: v => this.onChange(item.key, v)\n        } : false\n      }, this.state.user[item.key]))))\n    }), __jsx(If, {\n      condition: self\n    }, __jsx(_Space, {\n      direction: \"vertical\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(_Input, {\n      type: \"password\",\n      placeholder: \"\\u5982\\u679C\\u4E0D\\u9700\\u8981\\u4FEE\\u6539\\u5BC6\\u7801\\u8BF7\\u7559\\u7A7A\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      })\n    }), __jsx(_Button, {\n      loading: this.state.loading,\n      onClick: () => this.update()\n    }, \"\\u66F4\\u65B0\\u4FE1\\u606F\")))));\n  }\n\n}\n\n_defineProperty(User, \"defaultProps\", {});\n\n_defineProperty(User, \"contextType\", Context);\n\nexport default withRouter(User);","map":null,"metadata":{},"sourceType":"module"}