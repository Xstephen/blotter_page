{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction initialWASM(url, pkgName, callback) {\n  var go, mod, inst, result;\n  return _regeneratorRuntime.async(function initialWASM$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!WebAssembly.instantiateStreaming) {\n            // polyfill\n            WebAssembly.instantiateStreaming = function _callee(resp, importObject) {\n              var source;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.t0 = _regeneratorRuntime;\n                      _context.next = 3;\n                      return _regeneratorRuntime.awrap(resp);\n\n                    case 3:\n                      _context.t1 = _context.sent.arrayBuffer();\n                      _context.next = 6;\n                      return _context.t0.awrap.call(_context.t0, _context.t1);\n\n                    case 6:\n                      source = _context.sent;\n                      _context.next = 9;\n                      return _regeneratorRuntime.awrap(WebAssembly.instantiate(source, importObject));\n\n                    case 9:\n                      return _context.abrupt(\"return\", _context.sent);\n\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n          }\n\n          go = new window.global.Go();\n          _context2.prev = 2;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(WebAssembly.instantiateStreaming(fetch(url), go.importObject));\n\n        case 5:\n          result = _context2.sent;\n          mod = result.module;\n          inst = result.instance;\n          go.run(inst);\n          return _context2.abrupt(\"return\", window.global[pkgName]);\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.error(_context2.t0);\n          if (!!callback) callback();\n          throw _context2.t0;\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[2, 12]], Promise);\n}\n\nexport default initialWASM;","map":null,"metadata":{},"sourceType":"module"}