{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Icon } from '@ant-design/compatible';\nimport Container from '@/components/container';\nimport PostList from '@/components/post_list';\nimport { Context } from '@/utils/global';\nimport { indexPosts, tagsSearch } from '@/utils/api';\nimport { waitUntil } from '@/utils/debounce';\nimport TagPart from '@/components/tag';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  _createClass(Index, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(args) {\n      var data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(indexPosts('', 1, 5));\n\n            case 2:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                posts: data.posts\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var value = e.target.value;\n      waitUntil('index_search', function () {\n        _this.getPosts(value, 1, 10);\n      }, 1000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPageChange\", function (page, size) {\n      if (typeof size === 'undefined') {\n        size = _this.state.size;\n      }\n\n      _this.getPosts(_this.state.search, page, size);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPosts\", function _callee(search, page, size) {\n      var data, r;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(search == '')) {\n                _context2.next = 4;\n                break;\n              }\n\n              _this.setState({\n                posts: _this.props.posts,\n                total: 0,\n                search: '',\n                callback: undefined,\n                tags: []\n              });\n\n              _context2.next = 12;\n              break;\n\n            case 4:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(indexPosts(search, page, size));\n\n            case 7:\n              data = _context2.sent;\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(tagsSearch(search));\n\n            case 10:\n              r = _context2.sent;\n\n              _this.setState({\n                posts: data.posts,\n                total: data.total,\n                loading: false,\n                page: page,\n                size: size,\n                search: search,\n                callback: _this.onPageChange,\n                tags: r.tags\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _this.state = {\n      posts: _this.props.posts,\n      total: 0,\n      loading: false,\n      page: 1,\n      size: 10,\n      search: '',\n      tags: []\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u9996\\u9875|\".concat(context.blog_name)));\n      }), __jsx(Container, {\n        lg: 14,\n        md: 18\n      }, __jsx(_Card, {\n        className: \"shadow\"\n      }, __jsx(_Input, {\n        placeholder: \"\\u641C\\u7D22\\u6587\\u7AE0\",\n        onChange: this.onChange,\n        allowClear: true,\n        prefix: __jsx(Icon, {\n          type: \"search\"\n        }),\n        size: \"large\"\n      }))), __jsx(Container, null, this.state.tags.map(function (tag) {\n        return __jsx(TagPart, {\n          tag: tag,\n          key: tag[\"short\"]\n        });\n      }), __jsx(PostList, {\n        posts: this.state.posts,\n        header: this.state.total == 0 ? undefined : \"\\u5171\".concat(this.state.total, \"\\u6761\\u641C\\u7D22\\u7ED3\\u679C\"),\n        loading: this.state.loading,\n        page: this.state.page,\n        size: this.state.size,\n        total: this.state.total,\n        callback: this.state.callback\n      }), __jsx(\"div\", {\n        style: {\n          textAlign: 'center'\n        }\n      }, __jsx(Link, {\n        href: \"/archives\"\n      }, __jsx(_Button, {\n        type: \"dashed\",\n        style: {\n          background: 'transparent'\n        }\n      }, \"\\u67E5\\u770B\\u66F4\\u591A\")))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\n_defineProperty(Index, \"defaultProps\", {\n  posts: []\n});\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}