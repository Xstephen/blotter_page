{"ast":null,"code":"import \"antd/lib/notification/style/css\";\nimport _notification from \"antd/lib/notification\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\n\nfunction parseURL(url) {\n  return url.length > 0 && url[0] !== '/' || typeof document !== 'undefined' ? url : 'http://127.0.0.1:50000' + url;\n}\n\nexport var requestAsync = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, data) {\n    var r;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              method: method,\n              url: parseURL(url),\n              params: data\n            });\n\n          case 2:\n            r = _context.sent;\n            return _context.abrupt(\"return\", r.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function requestAsync(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var requestCallback = function requestCallback(method, url, data, callback) {\n  axios({\n    method: method,\n    url: parseURL(url),\n    params: data\n  }).then(function (data) {\n    return data.data;\n  }).then(function (data) {\n    return callback(data);\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var request = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(method, url, data, callback) {\n    var r;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios({\n              method: method,\n              url: parseURL(url),\n              params: method === 'get' ? data : undefined,\n              data: method === 'post' ? data : undefined\n            });\n\n          case 3:\n            r = _context2.sent;\n            _context2.next = 11;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n            if (typeof document !== 'undefined') {\n              _notification.error({\n                message: '请求发生错误',\n                description: \"\".concat(_context2.t0)\n              });\n            }\n\n            throw _context2.t0;\n\n          case 11:\n            if (callback) {\n              callback(r.data);\n            }\n\n            return _context2.abrupt(\"return\", r.data);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n\n  return function request(_x4, _x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}