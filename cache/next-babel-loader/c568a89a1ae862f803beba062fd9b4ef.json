{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { request } from '@/utils/request';\nexport var posts = function posts(params, callback) {\n  return _regeneratorRuntime.async(function posts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/posts', params, callback));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var indexPosts = function indexPosts(search, page, size, callback) {\n  return _regeneratorRuntime.async(function indexPosts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(posts({\n            search: search,\n            offset: (page - 1) * size,\n            number: size\n          }, callback));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var archives = function archives(page, size, callback) {\n  return _regeneratorRuntime.async(function archives$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(posts({\n            offset: (page - 1) * size,\n            number: size\n          }, callback));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var tagPosts = function tagPosts(tag, page, size, callback) {\n  return _regeneratorRuntime.async(function tagPosts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", request('get', '/api/tag', {\n            tag: tag,\n            offset: (page - 1) * size,\n            number: size\n          }, callback));\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var adminPosts = function adminPosts(search, page, size, field, up, callback) {\n  return _regeneratorRuntime.async(function adminPosts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/admin/posts', {\n            offset: (page - 1) * size,\n            number: size,\n            sort_field: field,\n            sort_type: up ? 1 : -1,\n            search: search\n          }, callback));\n\n        case 2:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var friends = function friends(callback) {\n  return _regeneratorRuntime.async(function friends$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/friends', {}, callback));\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var layout = function layout(callback) {\n  return _regeneratorRuntime.async(function layout$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/layout', {}, callback));\n\n        case 2:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var tags = function tags(callback) {\n  return _regeneratorRuntime.async(function tags$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/tags', {}, callback));\n\n        case 2:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 3:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var post = function post(url, callback) {\n  return _regeneratorRuntime.async(function post$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/post', {\n            url: url\n          }, callback));\n\n        case 2:\n          return _context9.abrupt(\"return\", _context9.sent);\n\n        case 3:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var adminPost = function adminPost(url, callback) {\n  return _regeneratorRuntime.async(function adminPost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/admin/post', {\n            url: url\n          }, callback));\n\n        case 2:\n          return _context10.abrupt(\"return\", _context10.sent);\n\n        case 3:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var comments = function comments(url, callback) {\n  return _regeneratorRuntime.async(function comments$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/comments', {\n            url: url\n          }, callback));\n\n        case 2:\n          return _context11.abrupt(\"return\", _context11.sent);\n\n        case 3:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var avatar = function avatar(email, callback) {\n  return _regeneratorRuntime.async(function avatar$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/avatar', {\n            email: email\n          }, callback));\n\n        case 2:\n          return _context12.abrupt(\"return\", _context12.sent);\n\n        case 3:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var addComment = function addComment(args, callback) {\n  return _regeneratorRuntime.async(function addComment$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/comment/add', args, callback));\n\n        case 2:\n          return _context13.abrupt(\"return\", _context13.sent);\n\n        case 3:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var markdown = function markdown(source, callback) {\n  return _regeneratorRuntime.async(function markdown$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return _regeneratorRuntime.awrap(request('post', '/api/markdown', {\n            source: source\n          }, callback));\n\n        case 2:\n          return _context14.abrupt(\"return\", _context14.sent);\n\n        case 3:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var tagsSearch = function tagsSearch(keyword, callback) {\n  return _regeneratorRuntime.async(function tagsSearch$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/tags', {\n            keyword: keyword,\n            number: 10,\n            offset: 0\n          }, callback));\n\n        case 2:\n          return _context15.abrupt(\"return\", _context15.sent);\n\n        case 3:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var login = function login(username, password, callback) {\n  return _regeneratorRuntime.async(function login$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/login', {\n            username: username,\n            password: password\n          }, callback));\n\n        case 2:\n          return _context16.abrupt(\"return\", _context16.sent);\n\n        case 3:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var logout = function logout(callback) {\n  return _regeneratorRuntime.async(function logout$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/logout', {}, callback));\n\n        case 2:\n          return _context17.abrupt(\"return\", _context17.sent);\n\n        case 3:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var info = function info(callback) {\n  return _regeneratorRuntime.async(function info$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/info', {}, callback));\n\n        case 2:\n          return _context18.abrupt(\"return\", _context18.sent);\n\n        case 3:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var postExist = function postExist(url, callback) {\n  return _regeneratorRuntime.async(function postExist$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/post/existed', {\n            url: url\n          }, callback));\n\n        case 2:\n          return _context19.abrupt(\"return\", _context19.sent);\n\n        case 3:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var postEdit = function postEdit(args, callback) {\n  return _regeneratorRuntime.async(function postEdit$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return _regeneratorRuntime.awrap(request('post', '/api/admin/post/edit', args, callback));\n\n        case 2:\n          return _context20.abrupt(\"return\", _context20.sent);\n\n        case 3:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var postDelete = function postDelete(id, callback) {\n  return _regeneratorRuntime.async(function postDelete$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/admin/post/delete', {\n            id: id\n          }, callback));\n\n        case 2:\n          return _context21.abrupt(\"return\", _context21.sent);\n\n        case 3:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var adminTags = function adminTags(keyword, page, number, sort_field, sort_inc, callback) {\n  return _regeneratorRuntime.async(function adminTags$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/tags', {\n            keyword: keyword,\n            number: number,\n            offset: (page - 1) * number,\n            sort_field: sort_field,\n            sort_inc: sort_inc\n          }, callback));\n\n        case 2:\n          return _context22.abrupt(\"return\", _context22.sent);\n\n        case 3:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var tagEdit = function tagEdit(id, name, _short, color, icon, callback) {\n  return _regeneratorRuntime.async(function tagEdit$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/admin/tag/edit', {\n            id: id,\n            name: name,\n            \"short\": _short,\n            color: color,\n            icon: icon\n          }, callback));\n\n        case 2:\n          return _context23.abrupt(\"return\", _context23.sent);\n\n        case 3:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var tagDelete = function tagDelete(id, callback) {\n  return _regeneratorRuntime.async(function tagDelete$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/admin/tag/delete', {\n            id: id\n          }, callback));\n\n        case 2:\n          return _context24.abrupt(\"return\", _context24.sent);\n\n        case 3:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var tagExisted = function tagExisted(id, _short2, callback) {\n  return _regeneratorRuntime.async(function tagExisted$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/tag/existed', {\n            id: id,\n            \"short\": _short2\n          }, callback));\n\n        case 2:\n          return _context25.abrupt(\"return\", _context25.sent);\n\n        case 3:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var friendsSet = function friendsSet(friends, callback) {\n  return _regeneratorRuntime.async(function friendsSet$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          _context26.next = 2;\n          return _regeneratorRuntime.awrap(request('post', '/api/admin/friends/set', {\n            friends: friends\n          }, callback));\n\n        case 2:\n          return _context26.abrupt(\"return\", _context26.sent);\n\n        case 3:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var view = function view(url, callback) {\n  return _regeneratorRuntime.async(function view$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _context27.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/view', {\n            url: url\n          }, callback));\n\n        case 2:\n          return _context27.abrupt(\"return\", _context27.sent);\n\n        case 3:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var menus = function menus(callback) {\n  return _regeneratorRuntime.async(function menus$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          _context28.next = 2;\n          return _regeneratorRuntime.awrap(request('get', '/api/menus', {}, callback));\n\n        case 2:\n          return _context28.abrupt(\"return\", _context28.sent);\n\n        case 3:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var menusSet = function menusSet(menus, callback) {\n  return _regeneratorRuntime.async(function menusSet$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          _context29.next = 2;\n          return _regeneratorRuntime.awrap(request('post', '/api/admin/menus/set', {\n            menus: menus\n          }, callback));\n\n        case 2:\n          return _context29.abrupt(\"return\", _context29.sent);\n\n        case 3:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var githubUser = function githubUser(username, callback) {\n  return _regeneratorRuntime.async(function githubUser$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          _context30.next = 2;\n          return _regeneratorRuntime.awrap(request('get', \"https://api.github.com/users/\".concat(username), {}, callback));\n\n        case 2:\n          return _context30.abrupt(\"return\", _context30.sent);\n\n        case 3:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var githubRepos = function githubRepos(username, page, callback) {\n  return _regeneratorRuntime.async(function githubRepos$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          _context31.next = 2;\n          return _regeneratorRuntime.awrap(request('get', \"https://api.github.com/users/\".concat(username, \"/repos?page=\").concat(page), {}, callback));\n\n        case 2:\n          return _context31.abrupt(\"return\", _context31.sent);\n\n        case 3:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var githubRepo = function githubRepo(username, repo, callback) {\n  return _regeneratorRuntime.async(function githubRepo$(_context32) {\n    while (1) {\n      switch (_context32.prev = _context32.next) {\n        case 0:\n          _context32.next = 2;\n          return _regeneratorRuntime.awrap(request('get', \"https://api.github.com/repos/\".concat(username, \"/\").concat(repo), {}, callback));\n\n        case 2:\n          return _context32.abrupt(\"return\", _context32.sent);\n\n        case 3:\n        case \"end\":\n          return _context32.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var about = function about(callback) {\n  return _regeneratorRuntime.async(function about$(_context33) {\n    while (1) {\n      switch (_context33.prev = _context33.next) {\n        case 0:\n          _context33.next = 2;\n          return _regeneratorRuntime.awrap(request('get', \"/api/about\", {}, callback));\n\n        case 2:\n          return _context33.abrupt(\"return\", _context33.sent);\n\n        case 3:\n        case \"end\":\n          return _context33.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var variables = function variables(callback) {\n  return _regeneratorRuntime.async(function variables$(_context34) {\n    while (1) {\n      switch (_context34.prev = _context34.next) {\n        case 0:\n          _context34.next = 2;\n          return _regeneratorRuntime.awrap(request('get', \"/api/admin/variables\", {}, callback));\n\n        case 2:\n          return _context34.abrupt(\"return\", _context34.sent);\n\n        case 3:\n        case \"end\":\n          return _context34.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var variablesSet = function variablesSet(data, callback) {\n  return _regeneratorRuntime.async(function variablesSet$(_context35) {\n    while (1) {\n      switch (_context35.prev = _context35.next) {\n        case 0:\n          _context35.next = 2;\n          return _regeneratorRuntime.awrap(request('post', \"/api/admin/variables/set\", {\n            data: data\n          }, callback));\n\n        case 2:\n          return _context35.abrupt(\"return\", _context35.sent);\n\n        case 3:\n        case \"end\":\n          return _context35.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};","map":null,"metadata":{},"sourceType":"module"}