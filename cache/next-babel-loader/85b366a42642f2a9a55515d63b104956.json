{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/switch/style/css\";\nimport _Switch from \"antd/lib/switch\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/date-picker/style/css\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/input-number/style/css\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/divider/style/css\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Router, { withRouter } from 'next/router';\nimport { Icon } from '@ant-design/compatible';\nimport moment from 'moment';\nimport MediaQuery from 'react-responsive';\nimport Container from '@/components/container';\nimport TagSearch from '@/components/tag_search';\nimport { waitUntil } from '@/utils/debounce';\nimport { markdown, adminPost, postEdit } from '@/utils/api';\nimport { dimensionMaxMap } from '@/utils/responsive';\nimport styles from '@/pages/post/post.less';\nimport { Context } from '@/utils/global';\nimport ShowNotification from '@/utils/notification';\n\nvar PostEdit = /*#__PURE__*/function (_React$Component) {\n  _inherits(PostEdit, _React$Component);\n\n  function PostEdit(props) {\n    var _this;\n\n    _classCallCheck(this, PostEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostEdit).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"now\", moment(new Date()));\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", function _callee(url) {\n      var r;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(adminPost(url));\n\n            case 2:\n              r = _context.sent;\n\n              _this.formRef.current.setFieldsValue({\n                id: r.id,\n                title: r.title,\n                url: r.url,\n                \"abstract\": r[\"abstract\"],\n                head_image: r.head_image,\n                view: r.view,\n                publish_time: moment(new Date(r.publish_time)),\n                //   edit_time: moment(new Date(r.edit_time)),\n                published: r.published,\n                raw: r.raw\n              });\n\n              _this.setState({\n                tags: r.tags,\n                html: r.content\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBigScreen\", function (match) {\n      _this.setState({\n        bigScreen: match\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMarkdown\", function (source) {\n      waitUntil('post_edit_sync', function _callee2() {\n        var r;\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  loading: true\n                });\n\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(markdown(source));\n\n              case 3:\n                r = _context2.sent;\n\n                _this.setState({\n                  html: r.html,\n                  loading: false\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        });\n      }, 1000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (current, pre) {\n      if (_this.state.preview) {\n        _this.renderMarkdown(current);\n      }\n\n      return current;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"previewClick\", function () {\n      if (!_this.state.preview) {\n        _this.renderMarkdown(_this.formRef.current.getFieldValue('raw'));\n      }\n\n      _this.setState(function (state) {\n        return {\n          preview: !state.preview\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"tagOnAdd\", function (tag) {\n      _this.setState(function (state) {\n        var tags = state.tags;\n        tags.push(tag);\n        return {\n          tags: tags\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"tagOnDelete\", function (tag) {\n      _this.setState(function (state) {\n        var tags = state.tags.filter(function (_tag) {\n          return _tag[\"short\"] != tag[\"short\"];\n        });\n        return {\n          tags: tags\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function _callee3() {\n      var obj, r;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                submitDisabled: true\n              });\n\n              obj = _this.formRef.current.getFieldsValue(['id', 'title', 'url', 'abstract', 'head_image', 'view', 'publish_time', 'edit_time', 'published', 'raw']);\n              obj.tags = _this.state.tags.map(function (tag) {\n                return tag.id;\n              });\n              obj.publish_time = obj.publish_time.unix();\n              obj.edit_time = obj.edit_time.unix();\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(postEdit(obj));\n\n            case 7:\n              r = _context3.sent;\n              ShowNotification(r);\n\n              _this.setState({\n                submitDisabled: false\n              });\n\n              Router.push(\"/admin/post?url=\".concat(obj.url));\n\n              _this.getData(obj.url);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderEditor\", function () {\n      return __jsx(_Form.Item, {\n        name: \"raw\"\n      }, __jsx(_Input.TextArea, {\n        autoSize: {\n          minRows: 15\n        },\n        spellCheck: \"false\"\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPreview\", function () {\n      return __jsx(\"div\", null, __jsx(Icon, {\n        type: _this.state.loading ? 'loading' : 'check'\n      }), __jsx(\"article\", {\n        className: styles.post\n      }, _this.state.headImage ? __jsx(\"img\", {\n        src: _this.state.headImage\n      }) : null, __jsx(_Divider, null), __jsx(\"section\", {\n        className: \"post-content\",\n        dangerouslySetInnerHTML: {\n          __html: _this.state.html\n        }\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderToolbar\", function () {\n      var md = _this.state.bigScreen && _this.state.preview;\n      return __jsx(_Row, {\n        gutter: 15\n      }, __jsx(_Col, {\n        lg: 24\n      }, __jsx(_Form.Item, {\n        name: \"id\"\n      }, __jsx(_Input, {\n        disabled: true,\n        placeholder: \"\\u6587\\u7AE0ID\",\n        addonBefore: \"ID\"\n      }))), __jsx(_Col, {\n        lg: md ? 12 : 6,\n        md: 12\n      }, __jsx(_Form.Item, {\n        name: \"url\",\n        rules: [{\n          required: true,\n          message: '文章必须有链接',\n          whitespace: true\n        }]\n      }, __jsx(_Input, {\n        placeholder: \"\\u6587\\u7AE0\\u94FE\\u63A5\",\n        addonBefore: \"/post/\"\n      }))), __jsx(_Col, {\n        lg: md ? 12 : 6,\n        md: 12\n      }, __jsx(_Form.Item, {\n        name: \"view\"\n      }, __jsx(_InputNumber, {\n        placeholder: \"\\u9605\\u8BFB\\u91CF\",\n        min: 0\n      }))), __jsx(_Col, {\n        lg: md ? 12 : 6,\n        md: 12\n      }, __jsx(_Form.Item, {\n        name: \"publish_time\"\n      }, __jsx(_DatePicker, {\n        showTime: true,\n        placeholder: \"\\u53D1\\u5E03\\u65F6\\u95F4\"\n      }))), __jsx(_Col, {\n        lg: md ? 12 : 6,\n        md: 12\n      }, __jsx(_Form.Item, {\n        name: \"edit_time\"\n      }, __jsx(_DatePicker, {\n        showTime: true,\n        placeholder: \"\\u7F16\\u8F91\\u65F6\\u95F4\"\n      }))), __jsx(_Col, {\n        lg: md ? 12 : 10,\n        md: 12\n      }, __jsx(_Form.Item, {\n        name: \"title\"\n      }, __jsx(_Input, {\n        placeholder: \"\\u6587\\u7AE0\\u6807\\u9898\"\n      }))), __jsx(_Col, {\n        lg: md ? 12 : 8,\n        md: 12\n      }, __jsx(_Form.Item, {\n        name: \"head_image\"\n      }, __jsx(_Input, {\n        placeholder: \"\\u5934\\u56FE\",\n        onChange: function onChange(e) {\n          _this.setState({\n            headImage: e.currentTarget.value\n          });\n        }\n      }))), __jsx(_Col, {\n        lg: md ? 12 : 2,\n        md: 12\n      }, __jsx(_Form.Item, null, __jsx(_Button, {\n        onClick: _this.previewClick\n      }, __jsx(Icon, {\n        type: _this.state.preview ? 'eye-invisible' : 'eye'\n      })))), __jsx(_Col, {\n        lg: md ? 12 : 2,\n        md: 12\n      }, __jsx(_Form.Item, {\n        name: \"published\",\n        valuePropName: \"checked\"\n      }, __jsx(_Switch, {\n        checkedChildren: \"\\u53D1\\u5E03\",\n        unCheckedChildren: \"\\u8349\\u7A3F\"\n      }))), __jsx(_Col, {\n        lg: md ? 12 : 2,\n        md: 12\n      }, __jsx(_Form.Item, null, __jsx(_Button, {\n        loading: _this.state.submitDisabled,\n        onClick: _this.submit,\n        type: \"primary\"\n      }, \"\\u63D0\\u4EA4\"))), __jsx(_Col, {\n        lg: 24\n      }, __jsx(_Form.Item, null, __jsx(TagSearch, {\n        onAdd: _this.tagOnAdd,\n        onDelete: _this.tagOnDelete,\n        tags: _this.state.tags\n      }))), __jsx(_Col, {\n        lg: 24\n      }, __jsx(_Form.Item, {\n        name: \"abstract\"\n      }, __jsx(_Input.TextArea, {\n        autoSize: {\n          minRows: 5\n        },\n        spellCheck: \"false\",\n        placeholder: \"\\u6587\\u7AE0\\u6458\\u8981\"\n      }))));\n    });\n\n    _this.state = {\n      raw: '',\n      html: '',\n      preview: false,\n      bigScreen: true,\n      loading: false,\n      tags: [],\n      headImage: '',\n      submitDisabled: false\n    };\n    return _this;\n  }\n\n  _createClass(PostEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url = this.props.router.query.url;\n\n      if (url != '' && typeof url != 'undefined') {\n        this.getData(url);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, {\n        xxl: 20,\n        xl: 20,\n        lg: 20,\n        md: 24,\n        sm: 24,\n        xs: 24\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u6587\\u7AE0\\u7F16\\u8F91|\\u540E\\u53F0|\".concat(context.blog_name)));\n      }), __jsx(MediaQuery, {\n        minDeviceWidth: dimensionMaxMap.lg,\n        onChange: this.onBigScreen\n      }, null), __jsx(_Row, {\n        gutter: 5\n      }, __jsx(_Col, {\n        span: this.state.bigScreen && this.state.preview ? 12 : 24\n      }, __jsx(_Card, null, __jsx(_Form, {\n        ref: this.formRef,\n        initialValues: {\n          id: '',\n          title: '',\n          url: '',\n          \"abstract\": '',\n          head_image: '',\n          view: 0,\n          publish_time: this.now,\n          edit_time: this.now,\n          published: false,\n          raw: ''\n        }\n      }, this.renderToolbar(), this.state.preview && !this.state.bigScreen ? this.renderPreview() : this.renderEditor()))), this.state.bigScreen && this.state.preview ? __jsx(_Col, {\n        span: 12\n      }, __jsx(_Card, null, this.renderPreview())) : null));\n    }\n  }]);\n\n  return PostEdit;\n}(React.Component);\n\n_defineProperty(PostEdit, \"defaultProps\", {});\n\nexport default withRouter(PostEdit);","map":null,"metadata":{},"sourceType":"module"}