{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { SaveOutlined } from '@ant-design/icons';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport Container from '@/components/container';\nimport { variables, variablesSet } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport DynamicForm from '@/components/dynamic_form';\nimport ShowNotification from '@/utils/notification';\n\nvar AdminVariables = /*#__PURE__*/function (_React$Component) {\n  _inherits(AdminVariables, _React$Component);\n\n  function AdminVariables(props) {\n    var _this;\n\n    _classCallCheck(this, AdminVariables);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminVariables).call(this, props));\n    _this.state = {\n      loading: false,\n      variables: []\n    };\n    return _this;\n  }\n\n  _createClass(AdminVariables, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var r, obj, i;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setState({\n                loading: true\n              });\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(variables());\n\n            case 3:\n              r = _context.sent;\n              obj = {};\n\n              for (i in r) {\n                obj[r[i].key] = r[i].value;\n              }\n\n              this.setState({\n                variables: obj,\n                loading: false\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, _Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Container, {\n        lg: 20,\n        md: 20,\n        sm: 24,\n        xs: 24\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u53D8\\u91CF\\u5217\\u8868|\\u540E\\u53F0|\".concat(context.blog_name)));\n      }), __jsx(_Card, null, __jsx(DndProvider, {\n        backend: HTML5Backend\n      }, __jsx(DynamicForm, {\n        value: this.state.variables,\n        callback: function callback(value) {\n          _this2.setState({\n            variables: value\n          });\n        }\n      }))), __jsx(_Button, {\n        shape: \"circle\",\n        size: \"large\",\n        type: \"primary\",\n        icon: __jsx(SaveOutlined, null),\n        className: \"shadow\",\n        onClick: function _callee() {\n          var v, data, r;\n          return _regeneratorRuntime.async(function _callee$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  v = _this2.state.variables;\n                  data = _Object$keys(v).map(function (key) {\n                    return {\n                      key: key,\n                      value: v[key]\n                    };\n                  });\n                  _context2.next = 4;\n                  return _regeneratorRuntime.awrap(variablesSet(data));\n\n                case 4:\n                  r = _context2.sent;\n                  ShowNotification(r);\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, null, _Promise);\n        },\n        style: {\n          position: 'fixed',\n          right: '20px',\n          top: '120px'\n        }\n      }));\n    }\n  }]);\n\n  return AdminVariables;\n}(React.Component);\n\n_defineProperty(AdminVariables, \"defaultProps\", {});\n\nexport default AdminVariables;","map":null,"metadata":{},"sourceType":"module"}