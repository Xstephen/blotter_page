{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Icon } from '@ant-design/compatible';\nimport Container from '@/components/container';\nimport PostList from '@/components/post_list';\nimport { Context } from '@/utils/global';\nimport { indexPosts, tagsSearch } from '@/utils/api';\nimport { waitUntil } from '@/utils/debounce';\nimport TagPart from '@/components/tag';\nimport TagSearch from '@/components/tag_search';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  _createClass(Index, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(args) {\n      var data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(indexPosts('', 1, 5, [], []));\n\n            case 2:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                posts: data.posts\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    }\n  }]);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var value = e.target.value;\n      waitUntil('index_search', function () {\n        _this.setState({\n          search: value,\n          page: 1\n        }, _this.getPosts);\n      }, 1000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPageChange\", function (page, size) {\n      if (typeof size === 'undefined') {\n        size = _this.state.size;\n      }\n\n      _this.setState({\n        page: page,\n        size: size\n      }, _this.getPosts);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPosts\", function _callee() {\n      var data, tags;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_this.state.search == '' && _this.state.with_tags.length == 0 && _this.state.without_tags.length == 0)) {\n                _context2.next = 4;\n                break;\n              }\n\n              _this.setState({\n                posts: _this.props.posts,\n                total: 0,\n                search: '',\n                callback: undefined,\n                tags: []\n              });\n\n              _context2.next = 18;\n              break;\n\n            case 4:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(indexPosts(_this.state.search, _this.state.page, _this.state.size, _this.state.with_tags, _this.state.without_tags));\n\n            case 7:\n              data = _context2.sent;\n              tags = [];\n\n              if (!(_this.state.search !== '')) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.t0 = _regeneratorRuntime;\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(tagsSearch(_this.state.search));\n\n            case 13:\n              _context2.t1 = _context2.sent.tags;\n              _context2.next = 16;\n              return _context2.t0.awrap.call(_context2.t0, _context2.t1);\n\n            case 16:\n              tags = _context2.sent;\n\n            case 17:\n              _this.setState({\n                posts: data.posts,\n                total: data.total,\n                loading: false,\n                callback: _this.onPageChange,\n                tags: tags\n              });\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTagSearch\", function (name) {\n      return __jsx(TagSearch, {\n        tags: _this.state[name],\n        onAdd: function onAdd(tag) {\n          _this.setState(function (state) {\n            var tags = state[name];\n            tags = tags.filter(function (item) {\n              return item.id != tag.id;\n            });\n            tags.push(tag);\n            var ret = {\n              page: 1\n            };\n            ret[name] = tags;\n            return ret;\n          }, _this.getPosts);\n        },\n        onDelete: function onDelete(tag) {\n          _this.setState(function (state) {\n            var tags = state[name];\n            tags = tags.filter(function (item) {\n              return item.id != tag.id;\n            });\n            var ret = {\n              page: 1\n            };\n            ret[name] = tags;\n            return ret;\n          }, _this.getPosts);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSearch\", function () {\n      return __jsx(Fragment, null, __jsx(_Row, null, __jsx(_Input, {\n        placeholder: \"\\u641C\\u7D22\\u6587\\u7AE0\",\n        onChange: _this.onChange,\n        allowClear: true,\n        prefix: __jsx(Icon, {\n          type: \"search\"\n        }),\n        size: \"large\"\n      })), __jsx(_Row, null, __jsx(_Col, null, \"\\u4ECE\\u8FD9\\u4E9B\\u6807\\u7B7E\\u91CC\\u641C\\u7D22\\uFF1A\"), __jsx(_Col, null, _this.renderTagSearch('with_tags'))), __jsx(_Row, null, __jsx(_Col, null, \"\\u4ECE\\u8FD9\\u4E9B\\u6807\\u7B7E\\u91CC\\u6392\\u9664\\uFF1A\"), __jsx(_Col, null, _this.renderTagSearch('without_tags'))));\n    });\n\n    _this.state = {\n      posts: _this.props.posts,\n      total: 0,\n      loading: false,\n      page: 1,\n      size: 10,\n      search: '',\n      tags: [],\n      with_tags: [],\n      without_tags: []\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u9996\\u9875|\".concat(context.blog_name)));\n      }), __jsx(Container, null, __jsx(_Card, {\n        className: \"shadow\"\n      }, this.renderSearch())), __jsx(Container, null, this.state.tags.map(function (tag) {\n        return __jsx(TagPart, {\n          tag: tag,\n          key: tag[\"short\"]\n        });\n      }), __jsx(PostList, {\n        posts: this.state.posts,\n        header: this.state.total == 0 ? undefined : \"\\u5171 \".concat(this.state.total, \" \\u6761\\u641C\\u7D22\\u7ED3\\u679C\"),\n        loading: this.state.loading,\n        page: this.state.page,\n        size: this.state.size,\n        total: this.state.total,\n        callback: this.state.callback\n      }), __jsx(\"div\", {\n        style: {\n          textAlign: 'center'\n        }\n      }, __jsx(Link, {\n        href: \"/archives\"\n      }, __jsx(_Button, {\n        type: \"dashed\",\n        style: {\n          background: 'transparent'\n        }\n      }, \"\\u67E5\\u770B\\u66F4\\u591A\")))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\n_defineProperty(Index, \"defaultProps\", {\n  posts: []\n});\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}