{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Router, { withRouter } from 'next/router';\nimport PostList from '@/components/post_list';\nimport Container from '@/components/container';\nimport { archives } from '@/utils/api';\nimport { parseNumberParams } from '@/utils/parse';\nimport { Context } from '@/utils/global';\nexport class Archives extends React.Component {\n  static async getInitialProps(args) {\n    console.log('Archives getInitialProps', args);\n    var page = parseNumberParams('page', args.asPath, 1);\n    var size = parseNumberParams('size', args.asPath, 10);\n    var data = await archives(page, size);\n    return {\n      page: page,\n      size: size,\n      posts: data.posts,\n      total: data.total\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onChange\", (page, size) => {\n      if (typeof size === 'undefined') {\n        size = this.props.size;\n      }\n\n      Router.push(`/archives?size=${size}&page=${page}`);\n    });\n\n    this.state = {\n      loading: false\n    };\n  }\n\n  render() {\n    return __jsx(Container, null, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `第${this.props.page}页|归档页|${context.blog_name}`))), __jsx(PostList, {\n      header: `共${this.props.total}篇文章`,\n      posts: this.props.posts,\n      page: this.props.page,\n      size: this.props.size,\n      total: this.props.total,\n      loading: this.state.loading,\n      callback: this.onChange\n    }));\n  }\n\n}\n\n_defineProperty(Archives, \"defaultProps\", {\n  page: 1,\n  total: 1,\n  size: 10,\n  posts: Array(10).fill(undefined)\n});\n\nexport default withRouter(Archives);","map":null,"metadata":{},"sourceType":"module"}