{"ast":null,"code":"import \"antd/lib/space/style/css\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/switch/style/css\";\nimport _Switch from \"antd/lib/switch\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/page-header/style/css\";\nimport _PageHeader from \"antd/lib/page-header\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport \"antd/lib/tooltip/style/css\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/statistic/style/css\";\nimport _Statistic from \"antd/lib/statistic\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style/css\";\nimport _InputNumber from \"antd/lib/input-number\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Container from '@/components/container';\nimport { Context } from '@/utils/global';\nimport { getAll, create } from '@/extensions/queue/api';\nimport moment from 'moment';\nimport TextArea from 'antd/lib/input/TextArea';\nimport ShowNotification from '@/utils/notification';\nconst forms = [{\n  key: 'max',\n  name: '同时登岛人数',\n  children: __jsx(_InputNumber, {\n    max: 7,\n    min: 1,\n    placeholder: \"\\u4E0D\\u5305\\u62EC\\u81EA\\u5DF1\"\n  }),\n  initial: 1\n}, {\n  key: 'password',\n  name: '登岛密码',\n  children: __jsx(_Input, {\n    placeholder: \"\\u767B\\u5C9B\\u5BC6\\u7801(\\u65E0\\u5BC6\\u7801\\u7559\\u7A7A)\"\n  }),\n  initial: ''\n}, {\n  key: 'description',\n  name: '描述',\n  children: __jsx(TextArea, null),\n  initial: '本岛大头菜 xx 元（非时间旅行），请秩序上岛，不收手续费'\n}];\n\nclass Queues extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"formRef\", React.createRef());\n\n    _defineProperty(this, \"getData\", async () => {\n      const r = await getAll(this.state.all, 1, 10);\n      this.setState({\n        total: r.total,\n        queues: r.queues\n      });\n    });\n\n    _defineProperty(this, \"onPageChange\", pagination => {\n      var {\n        current,\n        pageSize\n      } = pagination;\n      if (typeof current === 'undefined') current = this.state.page;\n      if (typeof pageSize === 'undefined') pageSize = this.state.size;\n      this.setState({\n        page: current,\n        size: pageSize\n      }, this.getData);\n    });\n\n    _defineProperty(this, \"onSubmit\", async () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        max,\n        password,\n        description\n      } = this.formRef.current.getFieldsValue(true);\n      const r = await create(max, password, description);\n      ShowNotification(r);\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"renderForm\", () => {\n      const initialValues = Object.assign({}, ...forms.map(item => ({\n        [item.key]: item.initial\n      })));\n      var help = '';\n\n      if (!this.context.user.existed) {\n        help = '请先登录';\n      } else if (this.context.user.qq == '' || this.context.user.ns_id == '' || this.context.user.ns_name == '' || this.context.user.ac_name == '' || this.context.user.ac_island == '') {\n        help = '请完善您的QQ号、NS账号、动森账号';\n      }\n\n      return __jsx(_Form, {\n        ref: this.formRef,\n        initialValues: initialValues,\n        labelCol: {\n          span: 4\n        },\n        wrapperCol: {\n          span: 20\n        }\n      }, forms.map(item => __jsx(_Form.Item, {\n        key: item.key,\n        name: item.key,\n        label: item.name\n      }, item.children)), __jsx(_Form.Item, {\n        key: \"submit\",\n        style: {\n          textAlign: 'right'\n        },\n        validateStatus: help == '' ? 'success' : 'error',\n        help: help,\n        labelCol: {\n          span: 0\n        },\n        wrapperCol: {\n          span: 24\n        }\n      }, __jsx(_Button, {\n        disabled: help != '',\n        type: \"primary\",\n        onClick: this.onSubmit,\n        loading: this.state.loading\n      }, \"\\u6253\\u5F00\\u673A\\u573A\\u5927\\u95E8\")));\n    });\n\n    this.state = {\n      loading: false,\n      total: 0,\n      queues: [],\n      all: false,\n      page: 1,\n      size: 10\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const columns = [{\n      title: '岛主信息',\n      key: 'username',\n      width: 200,\n      render: (_, record) => __jsx(Link, {\n        href: \"/user/[username]\",\n        as: `/user/${record.leader.username}`\n      }, __jsx(\"a\", {\n        target: \"_blank\"\n      }, record.leader.ac_island, \" \\u5C9B - \", record.leader.ac_name))\n    }, {\n      title: '描述',\n      key: 'description',\n      dataIndex: 'description',\n      ellipsis: true\n    }, {\n      title: '最大上岛人数',\n      key: 'max',\n      dataIndex: 'max',\n      width: 150\n    }, {\n      title: '排队人数',\n      key: 'queue',\n      width: 100,\n      render: (_, record) => __jsx(_Statistic, {\n        value: record.queue.filter(item => item.out_time == 0).length,\n        suffix: `/${record.queue.length}`\n      })\n    }, {\n      title: '开始时间',\n      key: 'create_time',\n      width: 100,\n      render: (_, record) => {\n        const time = moment(record.create_time, 'X');\n        return __jsx(_Tooltip, {\n          title: time.format('YYYY-MM-DD HH:mm:ss')\n        }, __jsx(\"span\", null, time.fromNow()));\n      }\n    }, {\n      title: '状态/结束时间',\n      key: 'finish_time',\n      width: 150,\n      render: (_, record) => {\n        const time = moment(record.create_time, 'X');\n        return record.finish_time == 0 ? '进行中' : __jsx(_Tooltip, {\n          title: time.format('YYYY-MM-DD HH:mm:ss')\n        }, __jsx(\"span\", null, time.fromNow()));\n      }\n    }];\n    return __jsx(Container, null, __jsx(_Space, {\n      direction: \"vertical\"\n    }, __jsx(_Card, null, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `动森候机大厅|${context.blog_name}`))), __jsx(_PageHeader, {\n      title: \"\\u52A8\\u68EE\\u5019\\u673A\\u5927\\u5385\",\n      subTitle: \"\\u4F18\\u79C0\\u7684\\u4E0A\\u5C9B\\u6392\\u961F\\u5DE5\\u5177\"\n    }, __jsx(_Typography.Paragraph, {\n      strong: true\n    }, \"\\u5EFA\\u7ACB\\u5019\\u673A\\u961F\\u4F0D\\u8BF7\\u4E25\\u683C\\u9075\\u5B88\\u6CD5\\u5F8B\\u6CD5\\u89C4\\uFF01\\u6240\\u6709\\u8FDD\\u89C4\\u5185\\u5BB9\\u5C06\\u88AB\\u63D0\\u4EA4\\u81F3\\u76F8\\u5173\\u90E8\\u95E8\\u3002\\u540C\\u65F6\\u5982\\u679C\\u60A8\\u53D1\\u73B0\\u6709\\u8FDD\\u89C4\\u5185\\u5BB9\\u88AB\\u53D1\\u5E03\\uFF0C\\u4E5F\\u8BF7\\u901A\\u8FC7\\u90AE\\u7BB1\\u3001 QQ \\u7B49\\u65B9\\u5F0F\\u8054\\u7CFB\\u6211\"), __jsx(_Typography.Paragraph, null, \"\\u8981\\u521B\\u5EFA\\u5EFA\\u7ACB\\u81EA\\u5DF1\\u7684\\u5019\\u673A\\u5385\\u4F9B\\u4ED6\\u4EBA\\u767B\\u5C9B\\uFF0C\\u8BF7\\u5148\\u6CE8\\u518C\\u8D26\\u53F7\\uFF0C\\u5E76\\u5B8C\\u5584\\u60A8\\u7684Nintendo Switch\\u4EE5\\u53CA\\u52A8\\u7269\\u68EE\\u53CB\\u4F1A\\u90E8\\u5206\\u8BBE\\u7F6E\"), __jsx(_Typography.Paragraph, null, \"\\u5982\\u679C\\u60F3\\u8981\\u83B7\\u5F97 QQ \\u63D0\\u9192\\u3001\", __jsx(_Typography.Text, {\n      delete: true\n    }, \"\\u5FAE\\u4FE1\\u63D0\\u9192\"), \"\\u3001\", __jsx(_Typography.Text, {\n      delete: true\n    }, \"\\u90AE\\u7BB1\\u63D0\\u9192\"), \"\\uFF0C\\u8BF7\\u7ED1\\u5B9A\\u76F8\\u5173\\u8D26\\u53F7\\u3002 \\u5176\\u4E2D QQ \\u4E00\\u952E\\u767B\\u5F55\\u4EC5\\u7528\\u4E8E\\u5FEB\\u901F\\u767B\\u5F55\\uFF0C\\u4ECD\\u7136\\u9700\\u8981\\u8F93\\u5165\\u60A8\\u7684 QQ \\u53F7\"))), __jsx(_Card, null, this.renderForm()), __jsx(_Card, null, __jsx(_Row, {\n      justify: \"end\",\n      gutter: [20, 20]\n    }, __jsx(_Col, null, __jsx(_Switch, {\n      checkedChildren: \"\\u663E\\u793A\\u6240\\u6709\",\n      unCheckedChildren: \"\\u663E\\u793A\\u8FDB\\u884C\\u4E2D\",\n      checked: this.state.all,\n      onChange: all => this.setState({\n        all\n      }, this.getData)\n    }))), __jsx(_Table, {\n      rowKey: record => record.id,\n      dataSource: this.state.queues,\n      scroll: {\n        x: 'auto'\n      },\n      onChange: this.onPageChange,\n      pagination: {\n        current: this.state.page,\n        total: this.state.total,\n        pageSize: this.state.size,\n        showSizeChanger: true\n      },\n      columns: columns\n    }))));\n  }\n\n}\n\n_defineProperty(Queues, \"contextType\", Context);\n\n_defineProperty(Queues, \"defaultProps\", {});\n\nexport default Queues;","map":null,"metadata":{},"sourceType":"module"}