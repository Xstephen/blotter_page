{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Icon } from '@ant-design/compatible';\nimport Container from '@/components/container';\nimport TagPart from '@/components/tag';\nimport { adminPosts, postDelete } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport ShowNotification from '@/utils/notification';\n\nclass AdminPostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getData\", async (page, size, field, up) => {\n      this.setState({\n        loading: true\n      });\n      var r = await adminPosts(page, size, field, up);\n      this.setState({\n        data: r.posts,\n        total: r.total,\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"columns\", [{\n      title: '标题',\n      key: 'title',\n      dataIndex: 'title',\n      render: (text, record, index) => __jsx(Link, {\n        href: '/post/[url]',\n        as: `/post/${record.url}`\n      }, __jsx(\"a\", null, record.title)),\n      width: '10%'\n    }, {\n      title: '链接',\n      key: 'url',\n      dataIndex: 'url',\n      width: '10%',\n      render: text => __jsx(_Typography.Text, {\n        ellipsis: true,\n        style: {\n          maxWidth: '100%'\n        }\n      }, text)\n    }, {\n      title: '发布时间',\n      key: 'publish_time',\n      dataIndex: 'publish_time',\n      sorter: true,\n      width: '10%'\n    }, {\n      title: '编辑时间',\n      key: 'edit_time',\n      dataIndex: 'edit_time',\n      sorter: true,\n      width: '10%'\n    }, {\n      title: '阅读量',\n      key: 'view',\n      dataIndex: 'view',\n      sorter: true,\n      width: '10%'\n    }, {\n      title: '已发布',\n      key: 'published',\n      dataIndex: 'published',\n      sorter: true,\n      width: '10%',\n      render: (text, record, index) => text ? __jsx(Icon, {\n        type: \"eye\",\n        style: {\n          color: 'green'\n        }\n      }) : __jsx(Icon, {\n        type: \"eye-invisible\",\n        style: {\n          color: 'red'\n        }\n      })\n    }, {\n      title: '标签',\n      key: 'tags',\n      dataIndex: 'tags',\n      width: '20%',\n      render: (text, record, index) => __jsx(\"div\", null, record.tags.map(tag => __jsx(TagPart, {\n        key: tag.short,\n        tag: tag\n      })))\n    }, {\n      title: '操作',\n      key: 'op',\n      width: '20%',\n      render: (text, record, index) => __jsx(_Row, {\n        gutter: 5\n      }, __jsx(_Col, {\n        span: 12\n      }, __jsx(Link, {\n        href: `/admin/post?url=${record.url}`\n      }, __jsx(_Button, {\n        size: \"small\"\n      }, __jsx(Icon, {\n        type: \"edit\"\n      }), \"\\u7F16\\u8F91\"))), __jsx(_Col, {\n        span: 12\n      }, __jsx(_Button, {\n        size: \"small\",\n        type: \"danger\",\n        onClick: () => {\n          this.onDelete(record.id);\n        }\n      }, __jsx(Icon, {\n        type: \"delete\"\n      }), \"\\u5220\\u9664\")))\n    }]);\n\n    _defineProperty(this, \"onDelete\", async id => {\n      var r = await postDelete(id);\n      ShowNotification(r);\n      this.setState(state => ({\n        data: state.data.filter(post => post.id != id)\n      }));\n    });\n\n    _defineProperty(this, \"onTableChange\", (pagination, filters, sorter, extra) => {\n      const {\n        current,\n        pageSize\n      } = pagination;\n      const {\n        field,\n        order\n      } = sorter;\n      this.setState({\n        page: current,\n        size: pageSize\n      });\n      var defaultSort = typeof order === 'undefined';\n      this.getData(current, pageSize, defaultSort ? 'publish_time' : `${field}`, defaultSort ? false : order === 'ascend');\n    });\n\n    this.state = {\n      loading: false,\n      pagination: {},\n      data: [],\n      total: 0,\n      size: 10,\n      page: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getData(1, 10, 'publish_time', false);\n  }\n\n  render() {\n    return __jsx(Container, {\n      lg: 20,\n      md: 20,\n      sm: 24,\n      xs: 24\n    }, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `文章列表|后台|${context.blog_name}`))), __jsx(_Card, null, __jsx(\"div\", {\n      style: {\n        textAlign: 'right'\n      }\n    }, __jsx(Link, {\n      href: \"/admin/post\"\n    }, __jsx(_Button, {\n      type: \"primary\"\n    }, __jsx(Icon, {\n      type: \"plus\"\n    }), \"\\u65B0\\u5EFA\\u6587\\u7AE0\"))), __jsx(_Table, {\n      rowKey: record => record.id,\n      columns: this.columns,\n      dataSource: this.state.data,\n      loading: this.state.loading,\n      onChange: this.onTableChange,\n      pagination: {\n        current: this.state.page,\n        total: this.state.total,\n        pageSize: this.state.size,\n        showSizeChanger: true\n      }\n    })));\n  }\n\n}\n\n_defineProperty(AdminPostList, \"defaultProps\", {});\n\nexport default AdminPostList;","map":null,"metadata":{},"sourceType":"module"}