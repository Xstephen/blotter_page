{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { request } from '@/utils/request';\nexport var getAll = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(all, page, size, callback) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return request('get', \"/api/extensions/queue/get_all\", {\n              all: all,\n              offset: (page - 1) * size,\n              number: size\n            }, callback);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAll(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var get = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id, callback) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return request('get', \"/api/extensions/queue/get\", {\n              id: id\n            }, callback);\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function get(_x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var create = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(max, password, description, callback) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return request('get', \"/api/extensions/queue/create\", {\n              max: max,\n              password: password,\n              description: description\n            }, callback);\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function create(_x7, _x8, _x9, _x10) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var update = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id, max, password, description, callback) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return request('get', \"/api/extensions/queue/update\", {\n              id: id,\n              max: max,\n              password: password,\n              description: description\n            }, callback);\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function update(_x11, _x12, _x13, _x14, _x15) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var finish = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, callback) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return request('get', \"/api/extensions/queue/finish\", {\n              id: id\n            }, callback);\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function finish(_x16, _x17) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var insert = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id, callback) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return request('get', \"/api/extensions/queue/insert\", {\n              id: id\n            }, callback);\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function insert(_x18, _x19) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var land = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(queue_id, member_id, callback) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return request('get', \"/api/extensions/queue/land\", {\n              queue_id: queue_id,\n              member_id: member_id\n            }, callback);\n\n          case 2:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function land(_x20, _x21, _x22) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var out = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(queue_id, member_id, callback) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return request('get', \"/api/extensions/queue/out\", {\n              queue_id: queue_id,\n              member_id: member_id\n            }, callback);\n\n          case 2:\n            return _context8.abrupt(\"return\", _context8.sent);\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function out(_x23, _x24, _x25) {\n    return _ref8.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}