{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/alert/style/css\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport \"antd/lib/page-header/style/css\";\nimport _PageHeader from \"antd/lib/page-header\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/popconfirm/style/css\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/tag/style/css\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/tooltip/style/css\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport Container from '@/components/container';\nimport { Context } from '@/utils/global';\nimport { request } from '@/utils/request';\nimport moment from 'moment';\nimport ShowNotification from '@/utils/notification';\n\nvar Queue = /*#__PURE__*/function (_React$Component) {\n  _inherits(Queue, _React$Component);\n\n  function Queue(props) {\n    var _this;\n\n    _classCallCheck(this, Queue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Queue).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", function _callee() {\n      var r;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(request('get', '/api/extensions/queue', {\n                id: _this.props.router.query['id']\n              }));\n\n            case 3:\n              r = _context.sent;\n\n              _this.setState({\n                queue: r.queue,\n                loading: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    });\n\n    _this.state = {\n      queue: [],\n      value: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Queue, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n      setInterval(this.getData, 5000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var waiting = this.state.queue.filter(function (item) {\n        return !item.finish;\n      });\n      var columns = [{\n        dataIndex: 'name',\n        title: '乘客信息'\n      }, {\n        title: '候机时间',\n        dataIndex: 'time',\n        sorter: function sorter(a, b) {\n          return a.time - b.time;\n        },\n        render: function render(value) {\n          return __jsx(_Tooltip, {\n            title: moment(value, 'X').format('YYYY-MM-DD HH:mm:ss')\n          }, __jsx(\"span\", null, moment(value, 'X').fromNow()));\n        }\n      }, {\n        title: '状态',\n        dataIndex: 'finish',\n        filters: [{\n          text: '已降落',\n          value: true\n        }, {\n          text: '候机中',\n          value: false\n        }],\n        onFilter: function onFilter(value, record) {\n          return value == record.finish;\n        },\n        render: function render(value) {\n          return value ? __jsx(_Tag, {\n            color: \"green\"\n          }, \"\\u5DF2\\u964D\\u843D\") : __jsx(_Tag, {\n            color: \"red\"\n          }, \"\\u672A\\u767B\\u673A\");\n        }\n      }];\n\n      if (this.context.token != '') {\n        columns.push({\n          title: '操作',\n          key: 'op',\n          render: function render(_, record) {\n            return __jsx(_Row, {\n              gutter: 10\n            }, __jsx(_Col, null, __jsx(_Button, {\n              size: \"small\",\n              onClick: function _callee2(e) {\n                var r;\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _this2.setState({\n                          loading: true\n                        });\n\n                        _context2.next = 3;\n                        return _regeneratorRuntime.awrap(request('get', '/api/extensions/queue/admin', {\n                          _id: record._id,\n                          id: record.id,\n                          type: record.finish ? 'unfinish' : 'finish'\n                        }));\n\n                      case 3:\n                        r = _context2.sent;\n                        ShowNotification(r);\n\n                        _this2.getData();\n\n                      case 6:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, _Promise);\n              }\n            }, \"\\u4FEE\\u6539\\u72B6\\u6001\")), __jsx(_Col, null, __jsx(_Popconfirm, {\n              title: \"\\u786E\\u5B9A\\u5220\\u9664\\uFF1F\",\n              onConfirm: function _callee3(e) {\n                var r;\n                return _regeneratorRuntime.async(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _this2.setState({\n                          loading: true\n                        });\n\n                        _context3.next = 3;\n                        return _regeneratorRuntime.awrap(request('get', '/api/extensions/queue/admin', {\n                          _id: record._id,\n                          id: record.id,\n                          type: 'delete'\n                        }));\n\n                      case 3:\n                        r = _context3.sent;\n                        ShowNotification(r);\n\n                        _this2.getData();\n\n                      case 6:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, null, null, null, _Promise);\n              }\n            }, __jsx(_Button, {\n              size: \"small\"\n            }, \"\\u5220\\u9664\\u8BB0\\u5F55\"))));\n          }\n        });\n      }\n\n      return __jsx(\"div\", null, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\".concat(_this2.props.router.query['id'], \"|\\u52A8\\u68EE\\u5019\\u673A\\u5BA4|\").concat(context.blog_name)));\n      }), __jsx(Container, null, __jsx(_Card, null, __jsx(_PageHeader, {\n        title: \"\\u52A8\\u68EE\\u5019\\u673A\\u5BA4\",\n        subTitle: this.props.router.query['id']\n      }), __jsx(_Alert, {\n        showIcon: true,\n        message: \"\\u767B\\u5C9B\\u89C4\\u8303\",\n        description: __jsx(\"span\", null, __jsx(_Typography.Paragraph, null, \"\\u8F93\\u5165\\u81EA\\u5DF1\\u7684\\u7FA4ID\\u6216\\u8005\\u6E38\\u620FID\\u70B9\\u51FB\\u6211\\u8981\\u6211\\u8981\\u5019\\u673A\\u52A0\\u5165\\u6392\\u961F\"), __jsx(_Typography.Paragraph, null, \"\\u6210\\u529F\\u843D\\u5730\\u540E\\u8BF7\\u70B9\\u51FB\\u201C\\u6211\\u8981\\u964D\\u843D\\u201D\\u5E76\\u5728\\u7FA4\\u91CC@\\u4E0B\\u4E00\\u540D\\u4E58\\u5BA2\\uFF08\\u5982\\u679C\\u662F\\u8981\\u6C42\\u5355\\u4EBA\\u4E0A\\u5C9B\\u5219\\u5728\\u8FD4\\u7A0B\\u540E@\\uFF09\"), __jsx(_Typography.Paragraph, null, \"\\u4E3A\\u4E86\\u907F\\u514D\\u70B8\\u5C9B\\uFF0C\\u8054\\u673A\\u6E38\\u620F\\u8BF7\\u5C3D\\u53EF\\u80FD\\u4F7F\\u7528\\u6D41\\u91CF\\u5F00\\u70ED\\u70B9\\u5E76\\u5F00\\u542F\\u52A0\\u901F\\u5668\\uFF08\\u90E8\\u5206\\u52A0\\u901F\\u5668\\u52A0\\u901F\\u540E\\u66F4\\u6162\\uFF0C\\u8BF7\\u4E0D\\u8981\\u7528\\uFF09\"), __jsx(_Typography.Paragraph, null, \"\\u5982\\u679C\\u5BCC\\u88D5\\uFF0C\\u8BF7\\u7ED9\\u5C9B\\u6C11\\u4EE3\\u8868\\u7559\\u4E0B\\u793C\\u7269\\u3002\\u4E0D\\u8981\\u4E71\\u52A8\\u5C9B\\u6C11\\u4EE3\\u8868\\u7684\\u4E1C\\u897F\\u3002\")),\n        type: \"info\"\n      }), __jsx(\"br\", null), waiting.length > 0 ? __jsx(_Alert, {\n        showIcon: true,\n        message: __jsx(\"span\", null, \"\\u8BF7 \", __jsx(_Typography.Text, {\n          strong: true\n        }, waiting[0].name), \" \\u51C6\\u5907\\u53D1\\u5C04\\uFF01 \\u5171\", ' ', __jsx(_Typography.Text, {\n          strong: true\n        }, waiting.length), \" \\u540D\\u4E58\\u5BA2\\u5728\\u7B49\\u5F85\"),\n        type: \"info\"\n      }) : __jsx(_Alert, {\n        showIcon: true,\n        message: \"\\u6240\\u6709\\u4E58\\u5BA2\\u5DF2\\u767B\\u673A\\u843D\\u5730\",\n        type: \"success\"\n      }), __jsx(_Row, {\n        justify: \"space-between\",\n        style: {\n          margin: 10\n        }\n      }, __jsx(_Col, null, __jsx(_Input, {\n        placeholder: \"\\u4E58\\u5BA2\\u4FE1\\u606F\",\n        value: this.state.value,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            value: e.target.value\n          });\n        }\n      })), __jsx(_Col, null, __jsx(_Button, {\n        loading: this.state.loading,\n        onClick: function _callee4(e) {\n          var r;\n          return _regeneratorRuntime.async(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this2.setState({\n                    loading: true\n                  });\n\n                  _context4.next = 3;\n                  return _regeneratorRuntime.awrap(request('get', '/api/extensions/queue/push', {\n                    id: _this2.props.router.query['id'],\n                    name: _this2.state.value\n                  }));\n\n                case 3:\n                  r = _context4.sent;\n                  ShowNotification(r);\n\n                  _this2.getData();\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, null, null, _Promise);\n        }\n      }, \"\\u6211\\u8981\\u5019\\u673A\")), __jsx(_Col, null, __jsx(_Popconfirm, {\n        disabled: waiting.length == 0,\n        title: \"\\u786E\\u5B9A\\u4F60\\u5DF2\\u964D\\u843D\\uFF0C\\u5E76\\u4E14\\u4F60\\u5C31\\u662F\\u5F53\\u524D\\u5019\\u673A\\u4E58\\u5BA2 \".concat(waiting.length && waiting[0].name, \" \\uFF1F\"),\n        onConfirm: function _callee5(e) {\n          var r;\n          return _regeneratorRuntime.async(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _this2.setState({\n                    loading: true\n                  });\n\n                  _context5.next = 3;\n                  return _regeneratorRuntime.awrap(request('get', '/api/extensions/queue/pop', {\n                    id: _this2.props.router.query['id']\n                  }));\n\n                case 3:\n                  r = _context5.sent;\n                  ShowNotification(r);\n\n                  _this2.getData();\n\n                case 6:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, null, null, null, _Promise);\n        }\n      }, __jsx(_Button, {\n        disabled: waiting.length == 0,\n        loading: this.state.loading\n      }, \"\\u6211\\u8981\\u964D\\u843D\")))), __jsx(_Table, {\n        rowKey: function rowKey(record) {\n          return record._id;\n        },\n        loading: this.state.loading,\n        dataSource: this.state.queue,\n        columns: columns\n      }))));\n    }\n  }]);\n\n  return Queue;\n}(React.Component);\n\n_defineProperty(Queue, \"defaultProps\", {\n  posts: []\n});\n\n_defineProperty(Queue, \"contextType\", Context);\n\nexport default withRouter(Queue);","map":null,"metadata":{},"sourceType":"module"}