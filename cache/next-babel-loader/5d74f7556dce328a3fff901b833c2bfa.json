{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/anchor/style/css\";\nimport _Anchor from \"antd/lib/anchor\";\nimport \"antd/lib/page-header/style/css\";\nimport _PageHeader from \"antd/lib/page-header\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/skeleton/style/css\";\nimport _Skeleton from \"antd/lib/skeleton\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport TagPart from '@/components/tag';\nimport Visiable from '@/components/visiable';\nimport CommentPart from '@/components/comment';\nimport Container from '@/components/container';\nimport { post } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport styles from './post.less';\n\nvar PostPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostPage, _React$Component);\n\n  _createClass(PostPage, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(args) {\n      var url, r, anchors;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = args.query.url;\n\n              if (_Array$isArray(url)) {\n                url = url[0];\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(post(url));\n\n            case 4:\n              r = _context.sent;\n              anchors = PostPage.findAnchor(r.content);\n              return _context.abrupt(\"return\", {\n                post: r,\n                anchors: anchors\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  function PostPage(props) {\n    var _this;\n\n    _classCallCheck(this, PostPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"render_post\", function () {\n      return _this.props.post === undefined ? __jsx(_Skeleton, {\n        active: true\n      }) : __jsx(\"article\", {\n        className: styles.post\n      }, __jsx(_PageHeader, {\n        className: \"shadow\",\n        title: _this.props.post.title\n      }, __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"right20\"\n      }, __jsx(_Icon, {\n        type: \"eye\",\n        className: \"right5\"\n      }), _this.props.post.view), __jsx(\"div\", {\n        className: \"right20\"\n      }, __jsx(_Icon, {\n        type: \"calendar\",\n        className: \"right5\"\n      }), _this.props.post.publish_time), _this.props.post.publish_time == _this.props.post.edit_time ? null : __jsx(\"div\", {\n        className: \"right20\"\n      }, __jsx(_Icon, {\n        type: \"edit\",\n        className: \"right5\"\n      }), _this.props.post.edit_time), __jsx(Context.Consumer, null, function (context) {\n        return context.token !== '' ? __jsx(Link, {\n          href: \"/admin/post?url=\".concat(_this.props.router.query.url)\n        }, __jsx(_Button, {\n          type: \"primary\",\n          size: \"small\"\n        }, \"\\u7F16\\u8F91\")) : null;\n      }), __jsx(\"blockquote\", null, _this.props.post[\"abstract\"]), __jsx(\"div\", null, __jsx(_Icon, {\n        type: \"tag\",\n        className: \"right20\"\n      }), _this.props.post.tags.map(function (tag) {\n        return __jsx(TagPart, {\n          key: tag[\"short\"],\n          tag: tag\n        });\n      })))), __jsx(\"section\", {\n        className: \"post-content\",\n        dangerouslySetInnerHTML: {\n          __html: _this.props.post.content\n        }\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render_anchor\", function (anchor) {\n      return __jsx(_Anchor.Link, {\n        key: \"\".concat(anchor.id, \"|\").concat(anchor.name),\n        href: anchor.id,\n        title: anchor.name\n      }, anchor.children.map(_this.render_anchor));\n    });\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PostPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return typeof this.props.post === 'undefined' ? null : __jsx(Container, {\n        lg: 16\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\".concat(_this2.props.post.title, \"|\").concat(context.blog_name)));\n      }), __jsx(_Card, null, this.render_post()), __jsx(_Card, null, __jsx(CommentPart, {\n        url: \"/post/\".concat(this.props.router.query.url)\n      })), __jsx(Visiable, {\n        visiable_bigger: \"xl\"\n      }, __jsx(_Anchor, {\n        offsetTop: 10,\n        style: {\n          maxHeight: 'calc(100% - 100px)',\n          background: 'transparent',\n          position: 'fixed',\n          top: '50px',\n          right: '30px'\n        }\n      }, this.props.anchors.map(this.render_anchor))));\n    }\n  }], [{\n    key: \"findAnchor\",\n    value: function findAnchor(text) {\n      var re = new RegExp(\"<h([1-6]) id=\\\"(.*)\\\">(.*)</h\\\\1>\", 'g');\n      var result_list = [];\n\n      do {\n        var result = re.exec(text);\n\n        if (result !== null) {\n          result_list.push({\n            id: \"#\".concat(result[2]),\n            name: result[3],\n            level: _parseInt(result[1]),\n            children: []\n          });\n        }\n      } while (result);\n\n      var anchors = [];\n\n      var insert = function insert(lst, value) {\n        if (lst.length > 0 && lst[lst.length - 1].level < value.level) {\n          insert(lst[lst.length - 1].children, value);\n        } else {\n          lst.push(value);\n        }\n      };\n\n      result_list.map(function (anchor) {\n        insert(anchors, anchor);\n      });\n      anchors.push({\n        id: '#blotter-comment',\n        name: '评论区',\n        level: 1,\n        children: []\n      });\n      return anchors;\n    }\n  }]);\n\n  return PostPage;\n}(React.Component);\n\n_defineProperty(PostPage, \"defaultProps\", {\n  anchors: []\n});\n\nexport default withRouter(PostPage);","map":null,"metadata":{},"sourceType":"module"}