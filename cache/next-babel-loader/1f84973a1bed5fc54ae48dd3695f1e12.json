{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { request } from '@/utils/request';\nexport var getAll = function getAll(all, page, size, callback) {\n  return _regeneratorRuntime.async(function getAll$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(request('get', \"/api/extensions/queue/get_all\", {\n            all: all,\n            offset: (page - 1) * size,\n            number: size\n          }, callback));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\nexport var create = function create(max, password, description, callback) {\n  return _regeneratorRuntime.async(function create$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(request('get', \"/api/extensions/queue/create\", {\n            max: max,\n            password: password,\n            description: description\n          }, callback));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};","map":null,"metadata":{},"sourceType":"module"}