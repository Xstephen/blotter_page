{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { layout } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport styles from '@/components/layout/layout.less';\nimport SiderRenderer from '@/components/layout/sider';\nimport FooterRenderer from '@/components/layout/footer';\nimport FixedButton from '@/components/layout/fixed_button';\nimport { Flex } from '@/components/container';\nimport '@/style/theme.less';\n\nclass BasicLayout extends React.Component {\n  static async getInitialProps(args) {\n    var r = await layout();\n    return r;\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"onResize\", () => {\n      const width = document.body.clientWidth;\n\n      if (width > 1024 && !this.context.big_screen) {\n        this.context.callback({\n          big_screen: true\n        });\n      } else if (width < 1024 && this.context.big_screen) {\n        this.context.callback({\n          big_screen: false\n        });\n      }\n    });\n\n    this.state = {\n      collapsed: true,\n      loginModal: false,\n      password: '',\n      okDisabled: false,\n      feedback: false\n    };\n  }\n\n  componentDidMount() {\n    this.context.callback({\n      big_screen: document.body.clientWidth > 1024\n    });\n    window.addEventListener('resize', this.onResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: [styles.root, this.context.theme].join(' ')\n    }, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, context.blog_name))), __jsx(SiderRenderer, {\n      pathname: this.props.router.pathname,\n      user: this.context.user,\n      avatar: this.context.avatar,\n      big_screen: this.context.big_screen,\n      theme: this.context.theme,\n      menus: this.context.menus,\n      callback: this.context.callback\n    }), __jsx(FixedButton, null), __jsx(Flex, {\n      direction: \"TB\",\n      mainAxis: \"space-around\",\n      style: {\n        width: this.context.big_screen ? 'calc(100vw - 320px)' : '90%',\n        margin: 'auto'\n      },\n      itemStyle: {\n        width: '100%'\n      }\n    }, this.props.children, __jsx(FooterRenderer, {\n      beian: this.context.beian,\n      friends: this.context.friends,\n      view: this.context.view,\n      from: this.context.from\n    })));\n  }\n\n}\n\n_defineProperty(BasicLayout, \"contextType\", Context);\n\nexport default withRouter(BasicLayout);","map":null,"metadata":{},"sourceType":"module"}