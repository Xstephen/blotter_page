{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './image.less';\n\nfunction CreateBox(props) {\n  const {\n    src,\n    alt = '',\n    title = ''\n  } = props;\n  const body = document.body;\n  const top = window.scrollY;\n  body.style.position = 'fixed';\n  body.style.top = `${-top}px`;\n  const box = document.createElement('div');\n  box.className = 'image-lightbox';\n  document.body.appendChild(box);\n  const close = document.createElement('span');\n  close.innerText = 'Ã—';\n  box.appendChild(close);\n  const p = document.createElement('p');\n  p.innerText = !!alt ? alt : title;\n  if (!!p.innerHTML) box.appendChild(p);\n  const img = document.createElement('img');\n  img.src = src;\n  img.alt = alt;\n  img.title = title;\n  box.appendChild(img);\n  const ratio = img.naturalWidth / img.naturalHeight;\n  var grabbing = false;\n  var offsetX = 0;\n  var offsetY = 0;\n  var mouseX = 0;\n  var mouseY = 0;\n\n  img.onmousedown = e => {\n    img.ondragstart = () => false;\n\n    img.style.cursor = 'grabbing';\n    grabbing = true;\n    mouseX = e.offsetX;\n    mouseY = e.offsetY;\n  };\n\n  img.onmousemove = e => {\n    if (grabbing) {\n      offsetX += e.offsetX - mouseX;\n      offsetY += e.offsetY - mouseY;\n      img.style.marginLeft = `${offsetX}px`;\n      img.style.marginTop = `${offsetY}px`;\n    }\n  };\n\n  img.onmouseup = e => {\n    img.style.cursor = 'grab';\n    grabbing = false;\n  };\n\n  img.onclick = e => {\n    e.stopPropagation();\n  };\n\n  const judgeWheel = e => {\n    const height = img.height - e.deltaY;\n    img.style.maxHeight = `unset`;\n    img.style.maxWidth = `unset`;\n    img.style.height = `${height}px`;\n    img.style.width = `${height * ratio}px`;\n  };\n\n  const judgeKey = e => {\n    if (e.keyCode === 27) remove();\n  };\n\n  const remove = () => {\n    document.removeEventListener('keydown', judgeKey);\n    document.removeEventListener('mousewheel', judgeWheel);\n    box.remove();\n    body.style.position = '';\n    body.style.top = '';\n    window.scrollTo(0, top);\n  };\n\n  document.addEventListener('keydown', judgeKey);\n  document.addEventListener('mousewheel', judgeWheel);\n  box.onclick = remove;\n  close.onclose = remove;\n}\n\nexport default (props => {\n  const {\n    src,\n    alt,\n    title,\n    height = '100%',\n    width = '100%',\n    maxHeight,\n    clickable = false,\n    style\n  } = props;\n  return __jsx(\"div\", {\n    className: \"image-container\",\n    style: _objectSpread({\n      height,\n      width,\n      maxHeight,\n      cursor: clickable ? 'pointer' : 'unset'\n    }, style),\n    onClick: () => {\n      if (clickable) CreateBox({\n        src,\n        alt,\n        title\n      });\n    }\n  }, __jsx(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url('${src}')`\n    }\n  }));\n});\nexport const setImageLightbox = img => {\n  const parent = img.parentElement;\n  const {\n    src,\n    alt,\n    title\n  } = img;\n  parent.removeAttribute('href');\n\n  parent.onclick = () => CreateBox({\n    src,\n    alt,\n    title\n  });\n};","map":null,"metadata":{},"sourceType":"module"}