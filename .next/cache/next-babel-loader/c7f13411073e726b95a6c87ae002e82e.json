{"ast":null,"code":"import \"antd/lib/popover/style/css\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/drawer/style/css\";\nimport _Drawer from \"antd/lib/drawer\";\nimport \"antd/lib/timeline/style/css\";\nimport _Timeline from \"antd/lib/timeline\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/spin/style/css\";\nimport _Spin from \"antd/lib/spin\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { StarFilled, MoreOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { Map, Marker } from 'react-amap';\nimport moment from 'moment';\nimport { Context } from '@/utils/global';\nimport If from '@/components/if';\nvar key = '81533a71a4db0eb8107620d99b954d9d';\n\nvar TravelMap = /*#__PURE__*/function (_React$Component) {\n  _inherits(TravelMap, _React$Component);\n\n  var _super = _createSuper(TravelMap);\n\n  function TravelMap(props) {\n    var _this;\n\n    _classCallCheck(this, TravelMap);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"context\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getZoom\", function () {\n      return typeof _this.state.ins === 'undefined' ? 0 : _this.state.ins.getZoom();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPos\", function () {\n      return typeof _this.state.ins === 'undefined' ? {\n        P: 0,\n        Q: 0,\n        lng: 0,\n        lat: 0\n      } : _this.state.ins.getCenter();\n    });\n\n    _this.state = {\n      drawer: false,\n      full: false\n    };\n    return _this;\n  }\n\n  _createClass(TravelMap, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        style: this.state.full ? {\n          position: 'fixed',\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          zIndex: 500,\n          overflow: 'hidden'\n        } : _objectSpread({\n          width: '100%',\n          height: '80vh',\n          overflow: 'hidden'\n        }, this.props.style)\n      }, __jsx(Map, {\n        amapkey: key,\n        loading: __jsx(_Spin, null),\n        mapStyle: this.context.theme === 'default' ? 'amap://styles/f5818203233e77c81d9a6555be54758a' : 'amap://styles/dark',\n        plugins: ['MapType', 'Scale', 'ToolBar'],\n        events: {\n          created: function created(ins) {\n            _this2.setState({\n              ins: ins\n            });\n\n            window.m = ins;\n            ins.setCity('中国');\n            if (!!_this2.props.onCreate) _this2.props.onCreate(ins);\n          }\n        }\n      }, __jsx(_Button, {\n        icon: __jsx(MoreOutlined, null),\n        type: \"primary\",\n        shape: \"circle\",\n        style: {\n          position: 'absolute',\n          left: '10px',\n          top: '10px'\n        },\n        onClick: function onClick() {\n          return _this2.setState(function (state) {\n            return {\n              drawer: !state.drawer\n            };\n          });\n        }\n      }), __jsx(_Button, {\n        icon: this.state.full ? __jsx(FullscreenExitOutlined, null) : __jsx(FullscreenOutlined, null),\n        shape: \"circle\",\n        style: {\n          position: 'absolute',\n          right: '60px',\n          bottom: '30px'\n        },\n        onClick: function onClick() {\n          return _this2.setState(function (state) {\n            return {\n              full: !state.full\n            };\n          });\n        }\n      }), __jsx(_Drawer, {\n        getContainer: false,\n        closable: false,\n        onClose: function onClose() {\n          return _this2.setState({\n            drawer: false\n          });\n        },\n        visible: this.state.drawer,\n        placement: \"left\",\n        style: {\n          position: 'absolute'\n        }\n      }, __jsx(_Timeline, {\n        mode: 'left'\n      }, this.props.cities.map(function (item) {\n        var result = [];\n        item.travels.map(function (i) {\n          return result.push(_objectSpread(_objectSpread({}, item), i));\n        });\n        return result;\n      }).reduce(function (a, b) {\n        return a.concat(b);\n      }, []).sort(function (a, b) {\n        return a.time - b.time;\n      }).map(function (item, idx) {\n        return __jsx(_Timeline.Item, {\n          key: idx,\n          label: moment(item.time, 'X').format('YYYY-MM-DD')\n        }, __jsx(\"a\", {\n          onClick: function onClick() {\n            _this2.setState({\n              drawer: false\n            });\n\n            _this2.state.ins.setZoomAndCenter(item.zoom, [item.lng, item.lat]);\n          }\n        }, item.name), __jsx(If, {\n          condition: !!item.link\n        }, '-', __jsx(Link, {\n          href: \"/post/[url]\",\n          as: \"/post/\".concat(item.link)\n        }, __jsx(\"a\", null, \"\\u6E38\\u8BB0\"))));\n      }))), this.props.cities.map(function (item) {\n        return __jsx(Marker, {\n          position: {\n            longitude: item.lng,\n            latitude: item.lat\n          }\n        }, __jsx(_Popover, {\n          title: \"\".concat(item.name),\n          content: __jsx(_List, {\n            size: \"small\",\n            dataSource: item.travels.sort(function (a, b) {\n              return a.time - b.time;\n            }),\n            renderItem: function renderItem(item) {\n              return __jsx(_List.Item, {\n                key: item.time\n              }, moment(item.time, 'X').format('YYYY-MM-DD'), __jsx(If, {\n                condition: !!item.link\n              }, ' ', __jsx(Link, {\n                href: \"/post/[url]\",\n                as: \"/post/\".concat(item.link)\n              }, __jsx(\"a\", null, \"\\u6E38\\u8BB0\"))));\n            }\n          })\n        }, __jsx(StarFilled, {\n          style: function () {\n            var color = _this2.context.theme === 'default' ? 'red' : 'yellow';\n            var filter = \"drop-shadow(0px 0px 10px \".concat(color, \")\");\n            return {\n              color: color,\n              filter: filter\n            };\n          }()\n        })));\n      })));\n    }\n  }]);\n\n  return TravelMap;\n}(React.Component);\n\n_defineProperty(TravelMap, \"contextType\", Context);\n\n_defineProperty(TravelMap, \"defaultProps\", {\n  cities: []\n});\n\nexport default TravelMap;","map":null,"metadata":{},"sourceType":"module"}