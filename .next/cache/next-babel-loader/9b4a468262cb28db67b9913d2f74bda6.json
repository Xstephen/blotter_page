{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/comment/style/css\";\nimport _Comment from \"antd/lib/comment\";\nimport \"antd/lib/tooltip/style/css\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/avatar/style/css\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/checkbox/style/css\";\nimport _Checkbox from \"antd/lib/checkbox\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Container from '@/components/container';\nimport { Context } from '@/utils/global';\nimport { commentsAdmin, commentSet } from '@/utils/api';\nimport moment from '@/utils/moment';\nimport ShowNotification from '@/utils/notification';\nconst defaultAvatar = 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png';\n\nclass AdminComments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getData\", async () => {\n      this.setState({\n        loading: true\n      });\n      var r = await commentsAdmin(this.state.page, this.state.size);\n      this.setState({\n        data: r.comments,\n        total: r.total,\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"onChange\", (page, size) => {\n      if (typeof size === 'undefined') size = this.state.size;\n      this.setState({\n        page,\n        size\n      }, this.getData);\n    });\n\n    _defineProperty(this, \"checkboxChange\", (e, id, key) => {\n      const checked = e.target.checked;\n      this.setState(state => {\n        var {\n          data\n        } = state;\n        data.map(item => {\n          if (item.id === id) {\n            item[key] = checked;\n          }\n\n          return item;\n        });\n        return {\n          data\n        };\n      });\n    });\n\n    _defineProperty(this, \"renderComment\", (comment, notReply) => {\n      const items = [{\n        key: 'show',\n        value: '显示'\n      }, {\n        key: 'ad',\n        value: '广告'\n      }, {\n        key: 'recv',\n        value: '接收提醒'\n      }];\n      return __jsx(_Comment, {\n        style: notReply ? {} : {\n          borderLeft: '#ccc 5px solid',\n          paddingLeft: 10\n        },\n        actions: notReply ? items.map(item => __jsx(_Checkbox, {\n          key: item.key,\n          checked: comment[item.key],\n          onChange: e => this.checkboxChange(e, comment.id, item.key)\n        }, item.value)) : [],\n        author: comment.email,\n        avatar: __jsx(_Avatar, {\n          src: comment.avatar ? comment.avatar : defaultAvatar\n        }),\n        datetime: __jsx(_Tooltip, {\n          title: moment(comment.time).format('YYYY-MM-DD HH:mm:ss')\n        }, __jsx(\"span\", null, moment(comment.time).fromNow())),\n        content: __jsx(\"div\", null, notReply && comment.reply_comment.id !== '000000000000000000000000' ? this.renderComment(comment.reply_comment, false) : null, __jsx(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: comment.content\n          }\n        }))\n      });\n    });\n\n    this.state = {\n      loading: false,\n      total: 0,\n      data: [],\n      page: 1,\n      size: 10\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    var pagination = {\n      showSizeChanger: true,\n      current: this.state.page,\n      pageSize: this.state.size,\n      total: this.state.total,\n      onChange: this.onChange,\n      onShowSizeChange: this.onChange\n    };\n    return __jsx(Container, {\n      lg: 20,\n      md: 20,\n      sm: 24,\n      xs: 24\n    }, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `评论列表|后台|${context.blog_name}`))), __jsx(_Card, null, __jsx(_List, {\n      className: \"comment-list\",\n      header: `共 ${this.state.total} 条评论`,\n      itemLayout: \"horizontal\",\n      loading: this.state.loading,\n      dataSource: this.state.data,\n      renderItem: (comment, idx) => __jsx(_List.Item, {\n        key: comment.id\n      }, this.renderComment(comment, true), __jsx(\"div\", {\n        style: {\n          textAlign: 'right'\n        }\n      }, __jsx(\"p\", null, __jsx(\"a\", {\n        href: comment.url,\n        target: \"_blank\"\n      }, \"\\u300A\", comment.title !== '' ? comment.title : '评论区', \"\\u300B\")), __jsx(\"p\", null, __jsx(_Button, {\n        onClick: async e => {\n          const r = await commentSet(comment.id, comment.ad, comment.recv, comment.show);\n          ShowNotification(r);\n        }\n      }, \"\\u4FDD\\u5B58\")))),\n      pagination: pagination\n    })));\n  }\n\n}\n\n_defineProperty(AdminComments, \"defaultProps\", {});\n\nexport default AdminComments;","map":null,"metadata":{},"sourceType":"module"}