{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/popover/style/css\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/drawer/style/css\";\nimport _Drawer from \"antd/lib/drawer\";\nimport \"antd/lib/timeline/style/css\";\nimport _Timeline from \"antd/lib/timeline\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/spin/style/css\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/input-number/style/css\";\nimport _InputNumber from \"antd/lib/input-number\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { StarFilled, MoreOutlined } from '@ant-design/icons';\nimport { Map, Marker } from 'react-amap';\nimport moment from 'moment';\nimport Container from '@/components/container';\nimport { Context } from '@/utils/global';\nimport { waitUntil } from '@/utils/debounce';\nimport If from '@/components/if';\nconst key = '81533a71a4db0eb8107620d99b954d9d';\n\nclass Travel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"formRef\", React.createRef());\n\n    _defineProperty(this, \"getZoom\", () => {\n      return typeof this.state.ins === 'undefined' ? 0 : this.state.ins.view.Ge.zoom;\n    });\n\n    _defineProperty(this, \"getPos\", () => {\n      return typeof this.state.ins === 'undefined' ? {\n        lng: 0,\n        lat: 0\n      } : {\n        lng: this.state.ins.view.Ge.center.lng,\n        lat: this.state.ins.view.Ge.center.lat\n      };\n    });\n\n    this.state = {\n      lng: 108,\n      lat: 34,\n      zoom: 4,\n      drawer: false\n    };\n  }\n\n  static getInitialProps() {\n    return {\n      cities: [{\n        name: '扬州',\n        lng: 119.430412,\n        lat: 32.401369,\n        travels: [{\n          time: 1491235200,\n          link: ''\n        }]\n      }, {\n        name: '苏州',\n        lng: 120.629989,\n        lat: 31.323712,\n        travels: [{\n          time: 1556640000,\n          link: ''\n        }]\n      }, {\n        name: '庐江',\n        lng: 120.629989,\n        lat: 31.323712,\n        travels: [{\n          time: 1515686400,\n          link: ''\n        }]\n      }, {\n        name: '西安',\n        lng: 109.285212,\n        lat: 34.385087,\n        travels: [{\n          time: 1525363200,\n          link: ''\n        }]\n      }, {\n        name: '乌镇',\n        lng: 120.498308,\n        lat: 30.735381,\n        travels: [{\n          time: 1593043200,\n          link: ''\n        }]\n      }, {\n        name: '西塘',\n        lng: 120.890814,\n        lat: 30.944785,\n        travels: [{\n          time: 1593187200,\n          link: '123'\n        }, {\n          time: 1693187200,\n          link: '456'\n        }]\n      }]\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const Input = props => {\n      return __jsx(_InputNumber, {\n        value: this.state[props.name],\n        onChange: v => {\n          waitUntil(`map_input_${props.name}`, () => {\n            const num = parseFloat(v.toString());\n            const obj = {\n              [props.name]: isNaN(num) ? 0 : num\n            };\n            this.setState(state => _objectSpread(_objectSpread({}, state), obj));\n          }, 200);\n        }\n      });\n    };\n\n    return __jsx(Container, null, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `游记|${context.blog_name}`))), __jsx(_Card, null, __jsx(Input, {\n      name: \"lng\"\n    }), __jsx(Input, {\n      name: \"lat\"\n    }), __jsx(Input, {\n      name: \"zoom\"\n    }), __jsx(\"div\", {\n      style: {\n        width: '100%',\n        height: '80vh',\n        overflow: 'hidden'\n      }\n    }, __jsx(Map, {\n      amapkey: key,\n      zoom: this.state.zoom,\n      center: {\n        lng: this.state.lng,\n        lat: this.state.lat\n      },\n      loading: __jsx(_Spin, null),\n      mapStyle: this.context.theme === 'default' ? 'amap://styles/normal' : 'amap://styles/dark',\n      events: {// created: (ins) => {\n        //   console.log(ins);\n        //   this.setState({ ins });\n        //   //   window.m = ins;\n        // },\n        // click: (a, b) => {\n        //   console.log('click', a, b);\n        // },\n        // mapmove: (a, b) => {\n        //   waitUntil(\n        //     'map_move',\n        //     () => {\n        //       console.log('move', a, b, this.state.ins.view.Ge);\n        //       this.setState(this.getPos());\n        //     },\n        //     200,\n        //   );\n        // },\n        // zoomend: (a, b) => {\n        //   waitUntil(\n        //     'map_move',\n        //     () => {\n        //       console.log('zoom', a, b);\n        //       this.setState({\n        //         zoom: this.getZoom(),\n        //       });\n        //     },\n        //     200,\n        //   );\n        // },\n      }\n    }, __jsx(_Button, {\n      icon: __jsx(MoreOutlined, null),\n      type: \"primary\",\n      shape: \"circle\",\n      style: {\n        position: 'absolute',\n        left: '10px',\n        top: '10px'\n      },\n      onClick: () => this.setState(state => ({\n        drawer: !state.drawer\n      }))\n    }), __jsx(_Drawer, {\n      getContainer: false,\n      closable: false,\n      onClose: () => this.setState({\n        drawer: false\n      }),\n      visible: this.state.drawer,\n      placement: \"left\",\n      style: {\n        position: 'absolute'\n      }\n    }, __jsx(_Timeline, {\n      mode: 'left'\n    }, this.props.cities.map(item => {\n      var result = [];\n      item.travels.map(i => result.push(_objectSpread(_objectSpread({}, item), i)));\n      return result;\n    }).reduce((a, b) => a.concat(b)).sort((a, b) => a.time - b.time).map((item, idx) => __jsx(_Timeline.Item, {\n      key: idx,\n      label: moment(item.time, 'X').format('YYYY-MM-DD')\n    }, __jsx(\"a\", {\n      onClick: () => {\n        this.setState({\n          lat: item.lat,\n          lng: item.lng,\n          zoom: 15,\n          drawer: false\n        });\n      }\n    }, item.name), __jsx(If, {\n      condition: !!item.link\n    }, ' ', __jsx(Link, {\n      href: item.link\n    }, __jsx(\"a\", null, \"\\u6E38\\u8BB0\"))))))), this.props.cities.map(item => __jsx(Marker, {\n      position: {\n        longitude: item.lng,\n        latitude: item.lat\n      }\n    }, __jsx(_Popover, {\n      title: `${item.name}`,\n      content: __jsx(_List, {\n        dataSource: item.travels.sort((a, b) => a.time - b.time),\n        renderItem: item => __jsx(_List.Item, {\n          key: item.time\n        }, moment(item.time, 'X').format('YYYY-MM-DD'), __jsx(If, {\n          condition: !!item.link\n        }, ' ', __jsx(Link, {\n          href: item.link\n        }, __jsx(\"a\", null, \"\\u6E38\\u8BB0\"))))\n      })\n    }, __jsx(StarFilled, {\n      style: (() => {\n        const color = this.context.theme === 'default' ? 'red' : 'yellow';\n        const filter = `drop-shadow(0px 0px 10px ${color})`;\n        return {\n          color,\n          filter\n        };\n      })()\n    }))))))));\n  }\n\n}\n\n_defineProperty(Travel, \"contextType\", Context);\n\n_defineProperty(Travel, \"defaultProps\", {\n  cities: []\n});\n\nexport default Travel;","map":null,"metadata":{},"sourceType":"module"}