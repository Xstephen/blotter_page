{"ast":null,"code":"import \"antd/lib/popover/style/css\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/avatar/style/css\";\nimport _Avatar from \"antd/lib/avatar\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Icon } from '@ant-design/compatible';\nimport If from '@/components/if';\nimport { Flex } from '@/components/container';\nimport { Left, Bar } from '@/components/svg';\nimport Button from '@/components/button';\nimport { logout } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\nimport { setCookie } from '@/utils/storage';\nimport { defaultContext } from '@/utils/global';\nimport styles from './sider.less';\nimport layer from '@/style/layer.less';\nimport { LoginModal } from '../login';\nexport default function (props) {\n  const {\n    user,\n    avatar,\n    big_screen,\n    theme: _theme,\n    menus,\n    pathname,\n    callback\n  } = props;\n  const theme = _theme === 'default' ? 'light' : 'dark';\n  const [collapsed, setCollapsed] = React.useState(true);\n  const [loginModal, setLoginModal] = React.useState(false);\n\n  const onLoginClick = () => setLoginModal(true);\n\n  const onLogoutClick = async () => {\n    var r = await logout();\n    ShowNotification(r);\n    setCookie('token', '', 0);\n    callback({\n      user: defaultContext.user\n    });\n  };\n\n  return __jsx(\"div\", null, collapsed ? null : __jsx(\"div\", {\n    className: [styles.dimmed, layer.mask_layer].join(' '),\n    onClick: () => setCollapsed(true)\n  }), __jsx(Flex, {\n    className: [layer.float_layer, styles.sider, ...(collapsed ? [styles.sider_collapsed] : [])].join(' '),\n    mainAxis: \"flex-start\",\n    subAxis: \"flex-start\",\n    mainSize: \"large\"\n  }, __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    direction: \"TB\",\n    className: ['shadow', styles.siderbar].join(' '),\n    style: {\n      width: collapsed ? big_screen ? 80 : 0 : 200\n    }\n  }, __jsx(\"div\", null), __jsx(\"img\", {\n    src: avatar,\n    width: \"100%\",\n    height: \"100%\",\n    style: {\n      background: 'white',\n      borderRadius: '100px',\n      maxWidth: '120px'\n    }\n  }), !user.existed ? __jsx(\"a\", {\n    onClick: onLoginClick\n  }, __jsx(_Avatar, {\n    icon: __jsx(UserOutlined, null)\n  })) : __jsx(_Popover, {\n    placement: \"right\",\n    trigger: ['click', 'hover'],\n    title: user.username,\n    content: __jsx(\"div\", null, __jsx(_Row, {\n      gutter: [10, 10]\n    }, __jsx(_Col, {\n      span: 12\n    }, __jsx(Link, {\n      href: \"/user/[username]\",\n      as: `/user/${user.username}`\n    }, __jsx(\"a\", null, \"\\u8BBE\\u7F6E\"))), __jsx(_Col, {\n      span: 12\n    }, __jsx(\"a\", {\n      onClick: onLogoutClick\n    }, \"\\u767B\\u51FA\"))), __jsx(If, {\n      condition: (user.permission & 1) != 0\n    }, __jsx(_Row, {\n      gutter: 10\n    }, __jsx(_Col, {\n      span: 12\n    }, __jsx(Link, {\n      href: \"/admin\"\n    }, __jsx(\"a\", null, \"\\u7BA1\\u7406\"))))))\n  }, __jsx(\"span\", {\n    style: {\n      cursor: 'pointer'\n    }\n  }, user.avatar ? __jsx(_Avatar, {\n    src: user.avatar,\n    style: {\n      background: 'unset'\n    }\n  }) : __jsx(_Avatar, {\n    icon: __jsx(UserOutlined, null)\n  }))), __jsx(\"div\", null), __jsx(Flex.Item, {\n    style: {\n      width: '100%'\n    }\n  }, __jsx(Menus, {\n    menus: menus,\n    theme: theme,\n    pathname: pathname\n  }))), __jsx(\"div\", {\n    className: styles.button_wrapper\n  }, __jsx(Button, {\n    primary: true,\n    circle: true,\n    size: \"middle\",\n    icon: collapsed ? __jsx(Bar, null) : __jsx(Left, null),\n    className: \"shadow\",\n    onClick: () => setCollapsed(!collapsed)\n  }))), __jsx(LoginModal, {\n    show: loginModal,\n    onCancel: () => setLoginModal(false),\n    callback: success => {\n      if (success) setLoginModal(false);\n    }\n  }));\n}\n\nfunction Menus(props) {\n  const {\n    menus,\n    theme,\n    pathname\n  } = props;\n  return __jsx(Flex, {\n    direction: \"TB\",\n    className: styles.menu\n  }, menus.map(item => {\n    const menuItem = __jsx(\"div\", null, __jsx(\"span\", {\n      className: styles.prefix\n    }, item.icon ? __jsx(Icon, {\n      type: item.icon\n    }) : null), __jsx(\"span\", {\n      className: styles.text\n    }, item.name));\n\n    return __jsx(\"li\", {\n      key: item.link,\n      className: item.link === pathname ? styles.active : ''\n    }, item.link.length > 0 && item.link[0] !== '/' ? __jsx(\"a\", {\n      target: \"_blank\",\n      href: item.link\n    }, menuItem) : __jsx(Link, {\n      href: item.link\n    }, __jsx(\"a\", null, menuItem)));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}