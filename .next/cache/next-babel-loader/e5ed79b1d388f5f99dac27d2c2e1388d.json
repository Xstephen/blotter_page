{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport './image.less';\n\nfunction CreateBox(props) {\n  var src = props.src,\n      _props$alt = props.alt,\n      alt = _props$alt === void 0 ? '' : _props$alt,\n      _props$title = props.title,\n      title = _props$title === void 0 ? '' : _props$title;\n  var img = document.createElement('img');\n  img.src = src;\n  img.alt = alt;\n  img.title = title;\n  var p = document.createElement('p');\n  p.innerText = !!alt ? alt : title;\n  var box = document.createElement('div');\n  box.className = 'image-lightbox';\n  box.appendChild(img);\n  if (!!p.innerHTML) box.appendChild(p);\n\n  var judgeKey = function judgeKey(e) {\n    if (e.keyCode === 27) remove();\n  };\n\n  var remove = function remove() {\n    document.removeEventListener('keydown', judgeKey);\n    box.remove();\n  };\n\n  box.onclick = remove;\n  document.addEventListener('keydown', judgeKey);\n  document.body.appendChild(box);\n}\n\nexport default (function (props) {\n  var src = props.src,\n      alt = props.alt,\n      title = props.title,\n      _props$height = props.height,\n      height = _props$height === void 0 ? '100%' : _props$height,\n      _props$width = props.width,\n      width = _props$width === void 0 ? '100%' : _props$width,\n      _props$clickable = props.clickable,\n      clickable = _props$clickable === void 0 ? false : _props$clickable,\n      styles = props.styles;\n  return __jsx(\"div\", {\n    className: \"image-container\",\n    style: _objectSpread({\n      height: height,\n      width: width,\n      cursor: clickable ? 'pointer' : 'unset'\n    }, styles),\n    onClick: function onClick() {\n      if (clickable) CreateBox({\n        src: src,\n        alt: alt,\n        title: title\n      });\n    }\n  }, __jsx(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: \"url('\".concat(src, \"')\")\n    }\n  }));\n});\nexport var setImageLightbox = function setImageLightbox(img) {\n  var parent = img.parentElement;\n  var src = img.src,\n      alt = img.alt,\n      title = img.title;\n  parent.removeAttribute('href');\n\n  parent.onclick = function () {\n    return CreateBox({\n      src: src,\n      alt: alt,\n      title: title\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}