{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { layout } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport styles from '@/components/layout/layout.less';\nimport SiderRenderer from '@/components/layout/sider';\nimport FooterRenderer from '@/components/layout/footer';\nimport FixedButton from '@/components/layout/fixed_button';\nimport { Flex } from '@/components/container';\nimport '@/style/theme.less';\n\nvar BasicLayout = /*#__PURE__*/function (_React$Component) {\n  _inherits(BasicLayout, _React$Component);\n\n  var _super = _createSuper(BasicLayout);\n\n  _createClass(BasicLayout, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(args) {\n        var r;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return layout();\n\n              case 2:\n                r = _context.sent;\n                return _context.abrupt(\"return\", r);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function BasicLayout(props) {\n    var _this;\n\n    _classCallCheck(this, BasicLayout);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"context\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      var width = document.body.clientWidth;\n\n      if (width > 1024 && !_this.context.big_screen) {\n        _this.context.callback({\n          big_screen: true\n        });\n      } else if (width < 1024 && _this.context.big_screen) {\n        _this.context.callback({\n          big_screen: false\n        });\n      }\n    });\n\n    _this.state = {\n      collapsed: true,\n      loginModal: false,\n      password: '',\n      okDisabled: false,\n      feedback: false\n    };\n    return _this;\n  }\n\n  _createClass(BasicLayout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.context.callback({\n        big_screen: document.body.clientWidth > 1024\n      });\n      window.addEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: [styles.root, this.context.theme].join(' ')\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, context.blog_name));\n      }), __jsx(SiderRenderer, {\n        pathname: this.props.router.pathname,\n        user: this.context.user,\n        avatar: this.context.avatar,\n        big_screen: this.context.big_screen,\n        theme: this.context.theme,\n        menus: this.context.menus,\n        callback: this.context.callback\n      }), __jsx(FixedButton, null), __jsx(Flex, {\n        direction: \"TB\",\n        mainAxis: \"space-around\",\n        style: {\n          width: this.context.big_screen ? 'calc(100vw - 320px)' : '90%',\n          margin: 'auto'\n        },\n        itemStyle: {\n          width: '100%'\n        }\n      }, this.props.children, __jsx(FooterRenderer, {\n        beian: this.context.beian,\n        friends: this.context.friends,\n        view: this.context.view,\n        from: this.context.from\n      })));\n    }\n  }]);\n\n  return BasicLayout;\n}(React.Component);\n\n_defineProperty(BasicLayout, \"contextType\", Context);\n\nexport default withRouter(BasicLayout);","map":null,"metadata":{},"sourceType":"module"}