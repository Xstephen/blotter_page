{"ast":null,"code":"import \"antd/lib/carousel/style/css\";\nimport _Carousel from \"antd/lib/carousel\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { LeftCircleOutlined, RightCircleOutlined } from '@ant-design/icons';\nimport Image from '@/components/image';\nimport styles from './carousel.less';\n\nvar Carousel = /*#__PURE__*/function (_Component) {\n  _inherits(Carousel, _Component);\n\n  var _super = _createSuper(Carousel);\n\n  function Carousel(props) {\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"carousel\", void 0);\n\n    _this.next = _this.next.bind(_assertThisInitialized(_this));\n    _this.previous = _this.previous.bind(_assertThisInitialized(_this));\n    _this.carousel = React.createRef();\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"next\",\n    value: function next() {\n      this.carousel.next();\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      this.carousel.prev();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          images = _this$props.images,\n          _this$props$height = _this$props.height,\n          height = _this$props$height === void 0 ? '100%' : _this$props$height,\n          _this$props$width = _this$props.width,\n          width = _this$props$width === void 0 ? '100%' : _this$props$width,\n          maxHeight = _this$props.maxHeight,\n          background = _this$props.background,\n          restProps = _objectWithoutProperties(_this$props, [\"images\", \"height\", \"width\", \"maxHeight\", \"background\"]);\n\n      return __jsx(\"div\", {\n        className: styles.container,\n        style: {\n          background: background\n        }\n      }, __jsx(\"div\", {\n        className: styles.button,\n        style: {\n          left: '10px'\n        }\n      }, __jsx(LeftCircleOutlined, {\n        onClick: this.previous\n      })), __jsx(_Carousel, _extends({\n        ref: function ref(_ref) {\n          return _this2.carousel = _ref;\n        }\n      }, restProps, {\n        className: styles.carousel,\n        style: {\n          height: height,\n          width: width,\n          maxHeight: maxHeight,\n          background: background\n        }\n      }), images.map(function (image) {\n        return __jsx(\"div\", null, __jsx(Image, {\n          src: image,\n          height: height,\n          maxHeight: maxHeight,\n          clickable: true\n        }));\n      })), __jsx(\"div\", {\n        className: styles.button,\n        style: {\n          right: '10px'\n        }\n      }, __jsx(RightCircleOutlined, {\n        onClick: this.next\n      })));\n    }\n  }]);\n\n  return Carousel;\n}(Component);\n\nexport default Carousel;","map":null,"metadata":{},"sourceType":"module"}