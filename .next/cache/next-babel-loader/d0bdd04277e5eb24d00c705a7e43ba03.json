{"ast":null,"code":"import \"antd/lib/space/style/css\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport '@/components/layout.less';\n\nvar Container = /*#__PURE__*/function (_React$Component) {\n  _inherits(Container, _React$Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    _classCallCheck(this, Container);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(_Row, {\n        justify: \"center\",\n        gutter: [this.props.gutter_h, this.props.gutter_v]\n      }, __jsx(_Col, {\n        xs: this.props.xs,\n        sm: this.props.sm,\n        md: this.props.md,\n        lg: this.props.lg,\n        xl: this.props.xl,\n        xxl: this.props.xxl\n      }, this.props.children));\n    }\n  }]);\n\n  return Container;\n}(React.Component);\n\n_defineProperty(Container, \"defaultProps\", {\n  xs: 24,\n  sm: 20,\n  md: 18,\n  lg: 16,\n  xl: undefined,\n  xxl: undefined,\n  gutter_h: 20,\n  gutter_v: 40\n});\n\nvar Space = function Space(props) {\n  var _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'vertical' : _props$direction,\n      size = props.size,\n      _props$textCenter = props.textCenter,\n      textCenter = _props$textCenter === void 0 ? false : _props$textCenter,\n      _props$flexCenter = props.flexCenter,\n      flexCenter = _props$flexCenter === void 0 ? false : _props$flexCenter,\n      className = props.className,\n      children = props.children,\n      style = props.style,\n      flex = props.flex;\n  var flexStyle = {};\n  if (!!flex) flexStyle = {\n    flex: 'auto',\n    justifyContent: flex\n  };\n  var classNames = [className, 'fullWidth'];\n  if (flexCenter) classNames.push('flexCenter');\n  if (textCenter) classNames.push('textCenter');\n  return __jsx(_Space, {\n    className: classNames.join(' '),\n    direction: direction,\n    size: size,\n    style: _objectSpread(_objectSpread({}, flexStyle), style)\n  }, children);\n};\n\nvar TextCenter = function TextCenter(props) {\n  return __jsx(\"div\", {\n    className: \"textCenter\"\n  }, props.children);\n};\n\nvar FlexCenter = function FlexCenter(props) {\n  return __jsx(\"div\", {\n    className: \"flexCenter\"\n  }, props.children);\n};\n\nexport default Container;\nexport { Space, TextCenter, FlexCenter };","map":null,"metadata":{},"sourceType":"module"}