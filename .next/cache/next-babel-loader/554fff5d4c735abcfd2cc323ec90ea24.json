{"ast":null,"code":"import \"antd/lib/carousel/style/css\";\nimport _Carousel from \"antd/lib/carousel\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { LeftCircleOutlined, RightCircleOutlined } from '@ant-design/icons';\nimport Image from '@/components/image';\nimport styles from './carousel.less';\n\nclass Carousel extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"carousel\", void 0);\n\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.carousel = React.createRef();\n  }\n\n  next() {\n    this.carousel.next();\n  }\n\n  previous() {\n    this.carousel.prev();\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      images,\n      height = '100%',\n      width = '100%',\n      maxHeight,\n      background,\n      style\n    } = _this$props,\n          restProps = _objectWithoutProperties(_this$props, [\"images\", \"height\", \"width\", \"maxHeight\", \"background\", \"style\"]);\n\n    return __jsx(\"div\", {\n      className: styles.container,\n      style: {\n        background\n      }\n    }, __jsx(\"div\", {\n      className: styles.button,\n      style: {\n        left: '10px'\n      }\n    }, __jsx(LeftCircleOutlined, {\n      onClick: this.previous\n    })), __jsx(_Carousel, _extends({\n      ref: ref => this.carousel = ref\n    }, restProps, {\n      className: styles.carousel,\n      style: _objectSpread({\n        height,\n        width,\n        maxHeight\n      }, style)\n    }), images.map((image, idx) => __jsx(\"div\", {\n      key: idx\n    }, __jsx(Image, {\n      src: image,\n      alt: `图片 ${idx + 1}`,\n      title: image.split('#').slice(1).join('#'),\n      height: height,\n      maxHeight: maxHeight,\n      clickable: true\n    })))), __jsx(\"div\", {\n      className: styles.button,\n      style: {\n        right: '10px'\n      }\n    }, __jsx(RightCircleOutlined, {\n      onClick: this.next\n    })));\n  }\n\n}\n\nexport default Carousel;","map":null,"metadata":{},"sourceType":"module"}