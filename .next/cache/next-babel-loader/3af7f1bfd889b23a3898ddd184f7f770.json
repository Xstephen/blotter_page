{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/popconfirm/style/css\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/notification/style/css\";\nimport _notification from \"antd/lib/notification\";\nimport \"antd/lib/avatar/style/css\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Icon } from '@ant-design/compatible';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport Container, { Space } from '@/components/container';\nimport { postDelete, users, reset_password } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport ShowNotification from '@/utils/notification';\nimport { waitUntil } from '@/utils/debounce';\nvar defaultSort = 'publish_time';\nvar defaultUp = false;\n\nvar AdminUsers = /*#__PURE__*/function (_React$Component) {\n  _inherits(AdminUsers, _React$Component);\n\n  var _super = _createSuper(AdminUsers);\n\n  function AdminUsers(props) {\n    var _this;\n\n    _classCallCheck(this, AdminUsers);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var value = e.target.value;\n      waitUntil('users_search', function () {\n        _this.setState({\n          search: value,\n          page: 1,\n          size: 10\n        }, _this.getData);\n      }, 1000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var r;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return users(_this.state.page, _this.state.size, _this.state.search, _this.state.field, _this.state.up ? 1 : -1);\n\n            case 3:\n              r = _context.sent;\n\n              _this.setState({\n                total: r.total,\n                data: r.users,\n                loading: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onDelete\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n        var r;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return postDelete(id);\n\n              case 2:\n                r = _context2.sent;\n                ShowNotification(r);\n\n                _this.setState(function (state) {\n                  return {\n                    data: state.data.filter(function (post) {\n                      return post.id != id;\n                    })\n                  };\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onTableChange\", function (pagination, filters, sorter, extra) {\n      var current = pagination.current,\n          pageSize = pagination.pageSize;\n      var field = sorter.field,\n          order = sorter.order;\n      var s = {};\n      if (!!current) s.page = current;\n      if (!!pageSize) s.size = pageSize;\n\n      if (typeof order !== 'undefined') {\n        s.field = field;\n        s.up = order === 'ascend';\n      }\n\n      _this.setState(s, _this.getData);\n    });\n\n    _this.state = {\n      search: '',\n      search_fields: ['title'],\n      loading: false,\n      pagination: {},\n      data: [],\n      total: 0,\n      size: 10,\n      page: 1,\n      with_tags: [],\n      without_tags: [],\n      field: defaultSort,\n      up: defaultUp\n    };\n    return _this;\n  }\n\n  _createClass(AdminUsers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = [{\n        title: '头像',\n        key: 'avatar',\n        dataIndex: 'avatar',\n        width: 50,\n        render: function render(value) {\n          return __jsx(_Avatar, {\n            src: value\n          });\n        }\n      }, {\n        title: '名称',\n        key: 'username',\n        dataIndex: 'username',\n        ellipsis: true,\n        render: function render(value) {\n          return __jsx(Link, {\n            href: \"/user/[username]\",\n            as: \"/user/\".concat(value)\n          }, value);\n        }\n      }, {\n        title: 'QQ',\n        key: 'qq',\n        dataIndex: 'qq',\n        ellipsis: true\n      }, {\n        title: '邮箱',\n        key: 'email',\n        dataIndex: 'email',\n        ellipsis: true\n      }, {\n        title: '绑定 QQ',\n        key: 'qq_union_id',\n        dataIndex: 'qq_union_id',\n        render: function render(value) {\n          return value === '' ? __jsx(CloseOutlined, {\n            style: {\n              color: 'red'\n            }\n          }) : __jsx(CheckOutlined, {\n            style: {\n              color: 'green'\n            }\n          });\n        }\n      }, {\n        title: '绑定 Github',\n        key: 'github_id',\n        dataIndex: 'github_id',\n        render: function render(value) {\n          return value === 0 ? __jsx(CloseOutlined, {\n            style: {\n              color: 'red'\n            }\n          }) : __jsx(CheckOutlined, {\n            style: {\n              color: 'green'\n            }\n          });\n        }\n      }, {\n        title: '操作',\n        key: 'op',\n        render: function render(_, record) {\n          return __jsx(_Popconfirm, {\n            title: \"\\u786E\\u5B9A\\u8981\\u91CD\\u7F6E\\u5BC6\\u7801\\uFF1F\",\n            onConfirm: /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n                var r;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return reset_password(record.id);\n\n                      case 2:\n                        r = _context3.sent;\n\n                        _notification.success({\n                          message: '修改成功',\n                          description: \"\\u65B0\\u5BC6\\u7801\\uFF1A\".concat(r.password),\n                          duration: null\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }()\n          }, __jsx(_Button, {\n            danger: true\n          }, \"\\u91CD\\u7F6E\\u5BC6\\u7801\"));\n        }\n      }];\n      return __jsx(Container, {\n        lg: 20,\n        md: 20,\n        sm: 24,\n        xs: 24\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u7528\\u6237\\u5217\\u8868|\\u540E\\u53F0|\".concat(context.blog_name)));\n      }), __jsx(_Card, null, __jsx(Space, null, __jsx(_Input, {\n        placeholder: \"\\u641C\\u7D22\\u7528\\u6237\",\n        onChange: this.onChange,\n        allowClear: true,\n        prefix: __jsx(Icon, {\n          type: \"search\"\n        }),\n        size: \"large\"\n      }), __jsx(_Table, {\n        rowKey: function rowKey(record) {\n          return record.id;\n        },\n        columns: columns,\n        scroll: {\n          x: true\n        },\n        dataSource: this.state.data,\n        loading: this.state.loading,\n        onChange: function onChange(a, b, c, d) {\n          return _this2.onTableChange(a, b, Array.isArray(c) ? c[0] : c, d);\n        },\n        pagination: {\n          current: this.state.page,\n          total: this.state.total,\n          pageSize: this.state.size,\n          showSizeChanger: true\n        }\n      }))));\n    }\n  }]);\n\n  return AdminUsers;\n}(React.Component);\n\n_defineProperty(AdminUsers, \"defaultProps\", {});\n\nexport default AdminUsers;","map":null,"metadata":{},"sourceType":"module"}