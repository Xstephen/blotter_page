{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/spin/style/css\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/result/style/css\";\nimport _Result from \"antd/lib/result\";\nimport \"antd/lib/alert/style/css\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/tabs/style/css\";\nimport _Tabs from \"antd/lib/tabs\";\nimport \"antd/lib/input-number/style/css\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/divider/style/css\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/radio/style/css\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/notification/style/css\";\nimport _notification from \"antd/lib/notification\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport { ArrowDownOutlined, ArrowUpOutlined } from '@ant-design/icons';\nimport Container, { Space, TextCenter } from '@/components/container';\nimport { Context } from '@/utils/global';\nimport initialCrypto from '@/utils/wasm_crypto';\nimport { isNull } from 'util';\nimport Countdown from 'antd/lib/statistic/Countdown';\nimport Wasm from '@/utils/wasm_exec';\nconst CryptoContext = React.createContext({\n  crypto: undefined\n});\n\nfunction showError(msg) {\n  _notification.error({\n    message: '错误',\n    description: `${msg}`\n  });\n}\n\nfunction string2Bytes(input) {\n  return new Uint8Array(input.split(',').filter(item => item != '').map(item => parseInt(item, 16)));\n}\n\nfunction bytes2string(input) {\n  return Array.from(input).map(item => `0x${item.toString(16).slice(-2).toUpperCase().padStart(2, '0')}`).join(', ');\n}\n\nfunction bytes2hex(input) {\n  return Array.from(input).map(item => `${('0' + item.toString(16)).slice(-2).toLowerCase()}`).join('');\n}\n\nfunction hex2Bytes(input) {\n  if (input.length == 0) {\n    return new Uint8Array([]);\n  }\n\n  if (input.length & 1) {\n    input = '0' + input;\n  }\n\n  return new Uint8Array(input.match(/.{1,2}/g).map(item => parseInt(item, 16)));\n}\n\nfunction TextInput(props) {\n  const {\n    value: defaultValue = '',\n    onChange,\n    closure\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"value\", \"onChange\", \"closure\"]);\n\n  const [value, setValue] = React.useState(defaultValue);\n  if (!!closure) closure(() => value, v => setValue(v));\n  return __jsx(Space, null, __jsx(_Input.TextArea, _extends({\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n      if (!!onChange) onChange(e);\n    }\n  }, restProps)));\n}\n\nfunction BytesInput(props) {\n  const {\n    value: defaultValue = new Uint8Array(),\n    onChange,\n    closure\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"value\", \"onChange\", \"closure\"]);\n\n  const [inputValue, setInput] = React.useState(bytes2string(defaultValue));\n  const [value, setValue] = React.useState(defaultValue);\n  const [r, setR] = React.useState(1);\n  const {\n    crypto\n  } = React.useContext(CryptoContext);\n\n  const resetValue = () => {\n    var ret = new Uint8Array();\n    if (r === 1) ret = string2Bytes(inputValue);else if (r === 2) ret = crypto.exports.debase64(inputValue).return;else if (r === 3) ret = hex2Bytes(inputValue);else ret = new TextEncoder().encode(inputValue);\n    setValue(ret);\n    return ret;\n  };\n\n  const resetInput = (r, v) => {\n    if (r == 1) setInput(bytes2string(v));else if (r == 2) setInput(crypto.exports.base64(v).return);else if (r == 3) setInput(bytes2hex(v));else setInput(new TextDecoder().decode(v));\n  };\n\n  if (!!closure) closure(() => resetValue(), v => {\n    setValue(v);\n    resetInput(r, v);\n  });\n  return __jsx(Space, null, __jsx(_Input.TextArea, _extends({\n    value: inputValue,\n    onChange: e => {\n      setInput(e.target.value);\n      if (!!onChange) onChange(e);\n    }\n  }, restProps)), __jsx(_Radio.Group, {\n    value: r,\n    onChange: e => {\n      const v = e.target.value;\n      resetInput(v, resetValue());\n      setR(v);\n    }\n  }, __jsx(_Radio, {\n    value: 1\n  }, \"Uint8Array\"), __jsx(_Radio, {\n    value: 2\n  }, \"Base64\"), __jsx(_Radio, {\n    value: 3\n  }, \"16\\u8FDB\\u5236\\u5B57\\u7B26\\u4E32\"), __jsx(_Radio, {\n    value: 4\n  }, \"UTF-8\")));\n}\n\nfunction Tab(props) {\n  const {\n    description = null,\n    keyEnable = true,\n    keyString = true,\n    keyLabel = '密钥',\n    keyDefault = keyString ? '' : new Uint8Array(),\n    keyPh = '请输入密钥',\n    ordinaryString = true,\n    ordinaryLabel = '原二进制数组',\n    ordinaryDefault = ordinaryString ? '' : new Uint8Array(),\n    ordinaryPh = '',\n    codeLabel = '编码结果',\n    codeString = true,\n    codeDefault = codeString ? '' : new Uint8Array(),\n    codePh = '',\n    encodeLabel = '编码',\n    decodeLabel = '解码',\n    encode,\n    decode\n  } = props;\n\n  var keyGetter = () => undefined;\n\n  var keySetter = v => {};\n\n  var ordinaryGetter = () => undefined;\n\n  var ordinarySetter = v => {};\n\n  var codeGetter = () => undefined;\n\n  var codeSetter = v => {};\n\n  return __jsx(Space, null, description, keyEnable ? __jsx(Fragment, null, keyString ? __jsx(TextInput, {\n    label: keyLabel,\n    placeholder: keyPh,\n    value: keyDefault,\n    closure: (g, s) => (keyGetter = g, keySetter = s)\n  }) : __jsx(BytesInput, {\n    label: keyLabel,\n    placeholder: keyPh,\n    value: keyDefault,\n    closure: (g, s) => (keyGetter = g, keySetter = s)\n  }), __jsx(_Divider, null)) : null, ordinaryString ? __jsx(TextInput, {\n    label: ordinaryLabel,\n    placeholder: ordinaryPh,\n    value: ordinaryDefault,\n    closure: (g, s) => (ordinaryGetter = g, ordinarySetter = s)\n  }) : __jsx(BytesInput, {\n    label: ordinaryLabel,\n    placeholder: ordinaryPh,\n    value: ordinaryDefault,\n    closure: (g, s) => (ordinaryGetter = g, ordinarySetter = s)\n  }), __jsx(Space, {\n    flexCenter: true,\n    direction: \"horizontal\"\n  }, __jsx(_Button, {\n    icon: __jsx(ArrowDownOutlined, null),\n    disabled: !encode,\n    onClick: () => {\n      try {\n        const ordinary = ordinaryGetter();\n        const key = keyGetter();\n        codeSetter(encode(ordinary, key));\n      } catch (err) {\n        showError(err);\n      }\n    }\n  }, encodeLabel), __jsx(_Button, {\n    icon: __jsx(ArrowUpOutlined, null),\n    disabled: !decode,\n    onClick: () => {\n      try {\n        const code = codeGetter();\n        const key = keyGetter();\n        ordinarySetter(decode(code, key));\n      } catch (err) {\n        showError(err);\n      }\n    }\n  }, decodeLabel)), codeString ? __jsx(TextInput, {\n    label: codeLabel,\n    placeholder: codePh,\n    value: codeDefault,\n    closure: (g, s) => (codeGetter = g, codeSetter = s)\n  }) : __jsx(BytesInput, {\n    label: codeLabel,\n    placeholder: codePh,\n    value: codeDefault,\n    closure: (g, s) => (codeGetter = g, codeSetter = s)\n  }));\n}\n\nfunction BytesTab(props) {\n  return __jsx(Tab, {\n    description: __jsx(_Typography.Paragraph, null, \"\\u6BD4\\u7279\\u6570\\u7EC4\\u662F\\u53EF\\u89C6\\u6587\\u672C\\u5728\\u8BA1\\u7B97\\u673A\\u5185\\u90E8\\u7684\\u5B58\\u50A8\\u5F62\\u5F0F(UTF-8)\", __jsx(\"br\", null), \"\\u7531\\u4E8E\\u8FD9\\u91CC\\u4F7F\\u7528\\u7684\\u8F93\\u5165\\u8F93\\u51FA\\u5927\\u591A\\u90FD\\u662F\\u4E8C\\u8FDB\\u5236\\u6570\\u7EC4(Uint8Array)\\uFF0C\\u56E0\\u6B64\\u8981\\u5728\\u8F93\\u5165\\u6846\\u8F93\\u5165\\u8F93\\u51FA\\uFF0C\\u901A\\u5E38\\u90FD\\u9700\\u8981\\u5728\\u8FD9\\u91CC\\u5C06\\u6587\\u672C\\u8F6C\\u6362\\u4E3A\\u53EF\\u4EE5\\u8BC6\\u522B\\u7684\\u4E8C\\u8FDB\\u5236\\u6570\\u7EC4\"),\n    keyEnable: false,\n    ordinaryString: false,\n    ordinaryPh: \"0xE4, 0xBD, 0xA0, 0xE5, 0xA5, 0xBD, 0x21\",\n    codePh: \"\\u4F60\\u597D!\",\n    encode: ordinary => new TextDecoder().decode(ordinary),\n    decode: code => new TextEncoder().encode(code)\n  });\n}\n\nfunction Base64Tab(props) {\n  const {\n    crypto\n  } = React.useContext(CryptoContext);\n  return __jsx(Tab, {\n    description: __jsx(_Typography.Paragraph, null, \"Base64 \\u662F\\u4E00\\u79CD\\u7F16\\u7801\\u7B97\\u6CD5\\uFF0C\\u5C06\\u4E8C\\u8FDB\\u5236\\u5185\\u5BB9\\u7F16\\u7801\\u4E3A\\u53EF\\u89C6\\u7684\\u5B57\\u7B26\\u5185\\u5BB9\\uFF0C\\u4F7F\\u7528\\u8BE5\\u5E94\\u7528\\u53EF\\u4EE5\\u540C\\u65F6\\u8BBE\\u7F6E\\u4E0D\\u540C\\u4E8E\\u9ED8\\u8BA4\\u7684 Base64 \\u53EF\\u7528\\u5B57\\u7B26\\u96C6(\\u957F\\u5EA6\\u5FC5\\u987B\\u662F64)\\u3002 \\u8FD9\\u91CC\\u7531\\u4E8E\\u6240\\u6709\\u7684\\u5BC6\\u7801\\u5B66\\u5185\\u5BB9\\u90FD\\u4F7F\\u7528\\u4E8C\\u8FDB\\u5236\\u8F93\\u5165\\u8F93\\u51FA(Uint8Array)\\uFF0C\\u56E0\\u6B64\\u4E5F\\u53EF\\u4EE5\\u4F7F\\u7528 Base64 \\u6765\\u5C06\\u5176\\u8F6C\\u6362\\u4E3A\\u66F4\\u5BB9\\u6613\\u5C55\\u793A\\u7684\\u5F62\\u5F0F\"),\n    keyLabel: \"Base64 \\u53EF\\u7528\\u5B57\\u7B26\",\n    keyDefault: crypto.exports.defaultBase64Key,\n    ordinaryString: false,\n    ordinaryPh: \"0xE4, 0xBD, 0xA0, 0xE5, 0xA5, 0xBD, 0x21\",\n    codePh: \"5L2g5aW9IQ==\",\n    encode: (ordinary, key) => {\n      const ret = crypto.exports.base64(ordinary);\n\n      if (ret.success) {\n        return ret.return;\n      } else {\n        showError(ret.return);\n        return '';\n      }\n    },\n    decode: (code, key) => {\n      const ret = crypto.exports.debase64(code);\n\n      if (ret.success) {\n        return ret.return;\n      } else {\n        showError(ret.return);\n        return new Uint8Array();\n      }\n    }\n  });\n}\n\nfunction ReplaceTab(props) {\n  const {\n    crypto\n  } = React.useContext(CryptoContext);\n  return __jsx(Tab, {\n    description: __jsx(_Typography.Paragraph, null, \"\\u4EE3\\u6362\\u5BC6\\u7801\\uFF0C\\u6309\\u7167\\u67D0\\u79CD\\u7279\\u5B9A\\u7684\\u89C4\\u5219\\uFF08\\u5BC6\\u94A5\\uFF09\\u5C06\\u5B57\\u7B26\\u66FF\\u6362\\u6210\\u5176\\u4ED6\\u7684\\u5B57\\u7B26\\uFF08\\u4E8C\\u8FDB\\u5236\\u4E0B\\u4E3A\\u5B57\\u8282\\u7684\\u66FF\\u6362\\uFF09\", __jsx(\"br\", null), \"\\u5728\\u8FD9\\u91CC\\uFF0C\\u4F7F\\u7528\\u5B57\\u7B26\\u4E32\\u6765\\u4F5C\\u4E3A\\u5BC6\\u94A5\\u7684\\u8F93\\u5165\\uFF08\\u53EA\\u652F\\u6301\\u5B57\\u6BCD\\u548C\\u6570\\u5B57\\uFF09\\uFF0C\\u6309\\u7167\", __jsx(_Typography.Text, {\n      code: true\n    }, \"A-Z\"), \"\\u3001\", __jsx(_Typography.Text, {\n      code: true\n    }, \"a-z\"), \"\\u3001\", __jsx(_Typography.Text, {\n      code: true\n    }, \"0-9\"), \"\\u7684\\u987A\\u5E8F\\u6765\\u8F93\\u5165\\u5176\\u66FF\\u6362\\u7684\\u5BC6\\u94A5\", __jsx(\"br\", null), \"\\u5982\\u4F20\\u7EDF\\u51EF\\u6492\\u5BC6\\u7801\\uFF08+3\\u66FF\\u6362\\uFF09\\u7684\\u5BC6\\u94A5\\u4E3A\", __jsx(_Typography.Text, {\n      code: true\n    }, crypto.exports.caesar)),\n    keyLabel: \"\\u66FF\\u6362\\u5BC6\\u94A5\",\n    keyDefault: crypto.exports.caesar,\n    ordinaryPh: \"Bupt\",\n    codePh: \"Exsw\",\n    encode: (ordinary, key) => {\n      const ret = crypto.exports.encrypto_replace(ordinary, key);\n\n      if (ret.success) {\n        return ret.return;\n      } else {\n        showError(ret.return);\n        return '';\n      }\n    },\n    decode: (code, key) => {\n      const ret = crypto.exports.decrypto_replace(code, key);\n\n      if (ret.success) {\n        return ret.return;\n      } else {\n        showError(ret.return);\n        return '';\n      }\n    }\n  });\n}\n\nfunction HashTab(props) {\n  const [value, setValue] = React.useState('sha1');\n  const {\n    crypto\n  } = React.useContext(CryptoContext);\n  return __jsx(Space, null, __jsx(_Radio.Group, {\n    onChange: v => setValue(v.target.value),\n    value: value\n  }, __jsx(_Radio, {\n    value: 'sha1'\n  }, \"SHA1\"), __jsx(_Radio, {\n    value: 'sha224'\n  }, \"SHA224\"), __jsx(_Radio, {\n    value: 'sha256'\n  }, \"SHA256\"), __jsx(_Radio, {\n    value: 'sha384'\n  }, \"SHA384\"), __jsx(_Radio, {\n    value: 'sha512'\n  }, \"SHA512\")), __jsx(Tab, {\n    description: __jsx(_Typography.Paragraph, null, \"\\u54C8\\u5E0C\\uFF08\\u6563\\u5217\\uFF09\\u7B97\\u6CD5\\u662F\\u4E00\\u79CD\\u4E0D\\u53EF\\u9006\\u7684\\u6620\\u5C04\\u51FD\\u6570\\uFF0C\\u5728\\u8FD9\\u91CC\\u8F93\\u5165\\u8F93\\u51FA\\u90FD\\u662F\\u6BD4\\u7279\\u6570\\u7EC4(Uint8Array)\\u3002\\u901A\\u5E38\\u5E94\\u8BE5\\u7ED3\\u5408\\u201C\\u6BD4\\u7279\\u6570\\u7EC4\\u8F6C\\u6362\\u201D\\u548C\\u201CBase64 \\u7F16\\u7801\\u201D\\u4F7F\\u7528\"),\n    keyEnable: false,\n    codeLabel: \"\\u54C8\\u5E0C\\u7ED3\\u679C\",\n    ordinaryPh: \"0xE4, 0xBD, 0xA0, 0xE5, 0xA5, 0xBD, 0x21\",\n    ordinaryString: false,\n    codePh: \"0xE4, 0xBD, 0xA0, 0xE5, 0xA5, 0xBD, 0x21\",\n    codeString: false,\n    encode: ordinary => {\n      const ret = crypto.exports[value](ordinary);\n\n      if (ret.success) {\n        return ret.return;\n      } else {\n        showError(ret.return);\n        return new Uint8Array();\n      }\n    }\n  }));\n}\n\nfunction HmacTab(props) {\n  const [value, setValue] = React.useState('sha1');\n  const {\n    crypto\n  } = React.useContext(CryptoContext);\n  return __jsx(Space, null, __jsx(_Radio.Group, {\n    onChange: v => setValue(v.target.value),\n    value: value\n  }, __jsx(_Radio, {\n    value: 'sha1'\n  }, \"SHA1\"), __jsx(_Radio, {\n    value: 'sha224'\n  }, \"SHA224\"), __jsx(_Radio, {\n    value: 'sha256'\n  }, \"SHA256\"), __jsx(_Radio, {\n    value: 'sha384'\n  }, \"SHA384\"), __jsx(_Radio, {\n    value: 'sha512'\n  }, \"SHA512\")), __jsx(Tab, {\n    description: __jsx(_Typography.Paragraph, null, \"\\u54C8\\u5E0C\\u6D88\\u606F\\u8BA4\\u8BC1\\u7801\\u662F\\u4E00\\u79CD\\u5E26\\u6709\\u5BC6\\u94A5\\u7684\\u54C8\\u5E0C\\u7B97\\u6CD5\\uFF0C\\u9664\\u53BB\\u54C8\\u5E0C\\u7B97\\u6CD5\\u63D0\\u4F9B\\u7684\\u5B8C\\u6574\\u6027\\uFF0C\\u8FD8\\u589E\\u52A0\\u4E86\\u8EAB\\u4EFD\\u9A8C\\u8BC1\\u7684\\u529F\\u80FD\"),\n    codeLabel: \"\\u54C8\\u5E0C\\u6D88\\u606F\\u9A8C\\u8BC1\\u7801\",\n    keyString: false,\n    keyPh: \"0x31, 0x32, 0x33, 0x34\",\n    ordinaryString: false,\n    ordinaryPh: \"0xE4, 0xBD, 0xA0, 0xE5, 0xA5, 0xBD\",\n    codeString: false,\n    codePh: \"0xC3, 0x5B, 0x67, 0x90, 0x50, 0x94, 0xA8, 0x6F, 0x35, 0xD7, 0x7B, 0xAB, 0x78, 0x0C, 0x74, 0x8A, 0x66, 0x6D, 0x09, 0x14\",\n    encode: (ordinary, key) => {\n      const ret = crypto.exports.hmac(ordinary, key, value);\n\n      if (ret.success) {\n        return ret.return;\n      } else {\n        showError(ret.return);\n        return new Uint8Array();\n      }\n    }\n  }));\n}\n\nfunction DESTab(props) {\n  const {\n    crypto\n  } = React.useContext(CryptoContext);\n  return __jsx(Tab, {\n    description: __jsx(_Typography.Paragraph, null, \"DES \\u662F\\u4E00\\u79CD\\u5206\\u7EC4\\u52A0\\u5BC6\\u7B97\\u6CD5\\uFF0C\\u5728\\u8FD9\\u91CC\\u662F\\u539F\\u672C\\u7684 DES \\u5B9E\\u73B0\\uFF0C\\u672A\\u8003\\u8651\\u5206\\u7EC4\\u52A0\\u5BC6\\u5DE5\\u4F5C\\u65B9\\u5F0F\\uFF0C\\u56E0\\u6B64\\u8981\\u6C42\\u8F93\\u5165\\u3001\\u8F93\\u51FA\\u3001\\u5BC6\\u94A5\\u957F\\u5EA6\\u5FC5\\u987B\\u662F 64 bit\", __jsx(\"br\", null), \"\\u6BCF\\u4E00\\u8F6E\\u7684\\u8F93\\u51FA\\u5C06\\u4F1A\\u8F93\\u51FA\\u5230\\u5F00\\u53D1\\u8005\\u5DE5\\u5177(DevTools)\"),\n    keyLabel: \"DES \\u5BC6\\u94A5\",\n    keyString: false,\n    ordinaryString: false,\n    codeString: false,\n    encodeLabel: \"\\u52A0\\u5BC6\",\n    decodeLabel: \"\\u89E3\\u5BC6\",\n    encode: (ordinary, key) => {\n      const ret = crypto.exports.des_encrypto(ordinary, key);\n\n      if (ret.success) {\n        return ret.return;\n      } else {\n        showError(ret.return);\n        return new Uint8Array();\n      }\n    },\n    decode: (code, key) => {\n      const ret = crypto.exports.des_decrypto(code, key);\n\n      if (ret.success) {\n        return ret.return;\n      } else {\n        showError(ret.return);\n        return new Uint8Array();\n      }\n    }\n  });\n}\n\nfunction TotpTab(props) {\n  const {\n    crypto\n  } = React.useContext(CryptoContext);\n  const [digit, setDigit] = React.useState(6);\n  const [diff, setDiff] = React.useState(30);\n  const [code, setCode] = React.useState(0);\n  const [left, setLeft] = React.useState(Date.now());\n\n  var keyGetter = () => undefined;\n\n  var keySetter = v => {};\n\n  const calc = () => {\n    const ret = crypto.exports.totp(keyGetter(), diff, digit);\n\n    if (ret.success) {\n      const {\n        code,\n        left\n      } = ret.return;\n      setCode(code);\n      setLeft(Date.now() + left * 1000);\n    } else {\n      setCode(0);\n      setLeft(Date.now() + 30 * 1000);\n      showError(ret.return);\n    }\n  };\n\n  return __jsx(Space, null, __jsx(_Typography.Paragraph, null, \"\\u57FA\\u4E8E\\u65F6\\u95F4\\u7684\\u4E00\\u6B21\\u4E00\\u5BC6\\u7B97\\u6CD5(TOTP)\\u662F\\u4E00\\u4E2A\\u6839\\u636E\\u5BC6\\u94A5\\u4EE5\\u53CA\\u65F6\\u95F4\\u751F\\u6210\\u5BC6\\u7801\\u7684\\u7B97\\u6CD5\\uFF0C\\u5E7F\\u6CDB\\u7528\\u4E8E\\u5404\\u79CD\\u5B89\\u5168\\u4EE4\\u3001\\u4E8C\\u6B65\\u9A8C\\u8BC1\\u7684\\u573A\\u666F\"), __jsx(TextCenter, null, __jsx(Countdown, {\n    title: __jsx(\"span\", null, \"\\u5BC6\\u7801 \", __jsx(\"strong\", null, code.toString().padStart(digit, '0')), \" \\u5931\\u6548\\u65F6\\u95F4\"),\n    value: left,\n    format: \"ss.SSS \\u79D2\",\n    onFinish: calc\n  })), __jsx(Space, {\n    direction: \"horizontal\"\n  }, __jsx(\"strong\", null, \"\\u4F4D\\u6570\"), __jsx(_InputNumber, {\n    value: digit,\n    min: 1,\n    onChange: v => setDigit(parseInt(v.toString()))\n  }), __jsx(\"strong\", null, \"\\u65F6\\u95F4\\u5468\\u671F\"), __jsx(_InputNumber, {\n    value: diff,\n    min: 1,\n    onChange: v => setDiff(parseInt(v.toString()))\n  }), __jsx(_Button, {\n    onClick: e => calc()\n  }, \"\\u5237\\u65B0\")), __jsx(Space, null, __jsx(\"strong\", null, \"\\u5BC6\\u94A5\"), __jsx(BytesInput, {\n    closure: (g, s) => (keyGetter = g, keySetter = s)\n  })));\n}\n\nclass CryptoApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"crypto\", void 0);\n\n    _defineProperty(this, \"renderTabs\", () => {\n      const tabs = [{\n        title: '比特数组转换',\n        child: __jsx(BytesTab, null)\n      }, {\n        title: 'Base64 编码',\n        child: __jsx(Base64Tab, null)\n      }, {\n        title: '代换密码',\n        child: __jsx(ReplaceTab, null)\n      }, {\n        title: 'DES 加密',\n        child: __jsx(DESTab, null)\n      }, {\n        title: '基于时间一次一密',\n        child: __jsx(TotpTab, null)\n      }, {\n        title: '哈希算法',\n        child: __jsx(HashTab, null)\n      }, {\n        title: '哈希消息验证码算法',\n        child: __jsx(HmacTab, null)\n      }];\n      return __jsx(_Tabs, {\n        defaultActiveKey: \"0\"\n      }, tabs.map((item, idx) => __jsx(_Tabs.TabPane, {\n        tab: item.title,\n        key: `${idx}`,\n        disabled: isNull(item.child)\n      }, item.child)));\n    });\n\n    this.state = {\n      loading: true,\n      error: undefined\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n\n    try {\n      await Wasm();\n      this.crypto = await initialCrypto();\n      this.setState({\n        loading: false\n      });\n    } catch (error) {\n      console.error(error);\n      this.setState({\n        error\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (!!this.crypto) this.crypto.exit();\n  }\n\n  render() {\n    var getter = () => {\n      return new Uint8Array();\n    };\n\n    return __jsx(Container, null, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `在线密码工具|${context.blog_name}`))), __jsx(_Card, null, __jsx(Space, null, __jsx(_Alert, {\n      showIcon: true,\n      message: \"\\u63D0\\u793A\",\n      description: __jsx(_Typography.Paragraph, null, \"\\u672C\\u5E94\\u7528\\u7528\\u4E8E\\u5B9E\\u9A8C WASM \\u76F8\\u5173\\u6280\\u672F\\uFF0C\\u52A0\\u5BC6\\u7B97\\u6CD5\\u4F7F\\u7528 Go WebAssembly \\u5B9E\\u73B0\\uFF0C\\u53EF\\u80FD\\u65E0\\u6CD5\\u5728\\u8F83\\u8001\\u7684\\u6D4F\\u89C8\\u5668\\u8FD0\\u884C\", __jsx(\"br\", null), \"\\uFF08\\u770B\\u4E0A\\u53BB\\u8FD9\\u662F\\u4E2A\\u524D\\u7AEF\\uFF0C\\u5176\\u5B9E\\u4F7F\\u7528\\u540E\\u7AEF\\u5199\\u7684\\uFF0C\\u4F46\\u662F\\u5B9E\\u9645\\u4E0A\\u6700\\u82B1\\u65F6\\u95F4\\u7684\\u8FD8\\u662F\\u524D\\u7AEF\\uFF09\")\n    }), !!this.state.error ? __jsx(_Result, {\n      status: \"error\",\n      title: \"WebAssembly \\u52A0\\u8F7D\\u9519\\u8BEF\",\n      subTitle: \"\\u6216\\u8BB8\\u4F60\\u9700\\u8981\\u5C1D\\u8BD5\\u4F7F\\u7528\\u66F4\\u73B0\\u4EE3\\u7684\\u6D4F\\u89C8\\u5668\",\n      extra: `${this.state.error}`\n    }) : this.state.loading ? __jsx(_Result, {\n      icon: __jsx(_Spin, {\n        size: \"large\"\n      }),\n      title: \"\\u6B63\\u5728\\u52A0\\u8F7D WebAssembly \\u6A21\\u5757\"\n    }) : __jsx(CryptoContext.Provider, {\n      value: {\n        crypto: this.crypto\n      }\n    }, this.renderTabs()))));\n  }\n\n}\n\nexport default CryptoApp;","map":null,"metadata":{},"sourceType":"module"}