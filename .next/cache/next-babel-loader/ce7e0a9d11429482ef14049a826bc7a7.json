{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/pagination/style/css\";\nimport _Pagination from \"antd/lib/pagination\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PostCard from '@/components/post_card';\nimport { Context } from '@/utils/global';\nimport { Space } from './container';\nimport styles from './post_list.less';\n\nclass PostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"renderList\", posts => {\n      return __jsx(Space, {\n        size: \"middle\"\n      }, posts.map(post => __jsx(\"div\", {\n        key: post.url\n      }, __jsx(PostCard, {\n        post: post,\n        loading: this.props.loading\n      }))));\n    });\n  }\n\n  render() {\n    var pagination = typeof this.props.callback === 'undefined' ? false : {\n      showSizeChanger: true,\n      current: this.props.page,\n      pageSize: this.props.size,\n      total: this.props.total,\n      onChange: this.props.callback,\n      onShowSizeChange: this.props.callback,\n      itemRender: this.props.pageRender\n    };\n\n    if (this.context.big_screen && this.props.posts.length > 1) {\n      var l = [];\n      var r = [];\n      var ln = 0;\n      var rn = 0;\n\n      for (var i = 0; i < this.props.posts.length; i++) {\n        const p = this.props.posts[i];\n\n        if (ln <= rn) {\n          ln += p.head_image === '' ? 1 : 2;\n          l.push(p);\n        } else {\n          rn += p.head_image === '' ? 1 : 2;\n          r.push(p);\n        }\n      }\n\n      if (rn > ln) {\n        if (r.slice(-1)[0].head_image === '') {\n          l.push(r.pop());\n        } else {\n          [l[l.length - 1], r[r.length - 1]] = [r[r.length - 1], l[l.length - 1]];\n        }\n      }\n    }\n\n    return __jsx(Space, {\n      size: \"middle\"\n    }, this.props.header ? __jsx(\"p\", null, this.props.header) : null, this.props.posts.length == 0 ? __jsx(\"div\", {\n      className: \"textCenter\",\n      style: {\n        lineHeight: '3em',\n        fontSize: '1.5em',\n        color: 'grey'\n      }\n    }, \"\\u6682\\u65E0\\u6570\\u636E\") : this.context.big_screen && this.props.posts.length > 1 ? __jsx(\"div\", {\n      className: styles.container\n    }, __jsx(\"div\", {\n      className: styles.column\n    }, this.renderList(l)), __jsx(\"div\", {\n      className: styles.column\n    }, this.renderList(r))) : this.renderList(this.props.posts), !!pagination ? __jsx(_Row, {\n      justify: \"end\"\n    }, __jsx(_Col, null, __jsx(_Pagination, pagination))) : null);\n  }\n\n}\n\n_defineProperty(PostList, \"contextType\", Context);\n\n_defineProperty(PostList, \"defaultProps\", {\n  posts: [],\n  page: undefined,\n  total: 0,\n  size: undefined,\n  loading: false,\n  callback: undefined,\n  header: undefined\n});\n\nexport default PostList;","map":null,"metadata":{},"sourceType":"module"}