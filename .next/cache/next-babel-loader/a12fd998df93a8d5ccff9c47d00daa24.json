{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nclass FocusDiv extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"ref\", React.createRef());\n\n    _defineProperty(this, \"judgeHeight\", () => {\n      const windowTop = document.documentElement.scrollTop;\n      const windowHeight = document.documentElement.clientHeight;\n      const elementTop = this.ref.current.offsetTop;\n      const elementHeight = this.ref.current.offsetHeight;\n      const elementCenter = elementTop + elementHeight / 2;\n      const windowCenter = windowTop + windowHeight / 2;\n      const distance = Math.abs(elementCenter - windowCenter);\n\n      if (windowHeight * this.props.distance / 2 >= distance) {\n        this.setState({\n          in: true\n        });\n      } else {\n        this.setState({\n          in: false\n        });\n      }\n    });\n\n    this.state = {\n      in: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('scroll', this.judgeHeight);\n    this.judgeHeight();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('scroll', this.judgeHeight);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      ref: this.ref\n    }, this.props.children(this.state.in));\n  }\n\n}\n\n_defineProperty(FocusDiv, \"defaultProps\", {\n  distance: 0.25\n});\n\nexport default FocusDiv;","map":null,"metadata":{},"sourceType":"module"}