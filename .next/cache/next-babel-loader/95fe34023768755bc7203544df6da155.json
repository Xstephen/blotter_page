{"ast":null,"code":"import \"antd/lib/page-header/style/css\";\nimport _PageHeader from \"antd/lib/page-header\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/skeleton/style/css\";\nimport _Skeleton from \"antd/lib/skeleton\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { EyeOutlined, CalendarOutlined, EditOutlined, TagOutlined } from '@ant-design/icons';\nimport { setImageLightbox } from '@/components/image';\nimport If from '@/components/if';\nimport TagPart from '@/components/tag';\nimport { Context } from '@/utils/global';\nimport styles from '@/pages/post/post.less';\n\nclass PostContent extends Component {\n  resetImage() {\n    const containers = document.getElementsByClassName('image');\n\n    for (var i = 0; i < containers.length; i++) {\n      const imgs = containers[i].getElementsByTagName('img');\n\n      for (var j = 0; j < imgs.length; j++) {\n        setImageLightbox(imgs[j]);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.resetImage();\n  }\n\n  componentDidUpdate() {\n    this.resetImage();\n  }\n\n  render() {\n    return this.props.post === undefined ? __jsx(_Skeleton, {\n      active: true\n    }) : __jsx(\"article\", {\n      className: styles.post\n    }, __jsx(_PageHeader, {\n      className: \"shadow\",\n      title: this.props.post.title\n    }, __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"right20\"\n    }, __jsx(EyeOutlined, {\n      className: \"right5\"\n    }), this.props.post.view), __jsx(\"div\", {\n      className: \"right20\"\n    }, __jsx(CalendarOutlined, {\n      className: \"right5\"\n    }), this.props.post.publish_time), this.props.post.publish_time == this.props.post.edit_time ? null : __jsx(\"div\", {\n      className: \"right20\"\n    }, __jsx(EditOutlined, {\n      className: \"right5\"\n    }), this.props.post.edit_time), __jsx(Context.Consumer, null, context => (context.user.permission & 1) == 1 ? __jsx(Link, {\n      href: `/admin/post?url=${this.props.post.url}`\n    }, __jsx(_Button, {\n      type: \"primary\",\n      size: \"small\"\n    }, \"\\u7F16\\u8F91\")) : null), __jsx(If, {\n      condition: !!this.props.post.abstract\n    }, __jsx(\"blockquote\", null, this.props.post.abstract)), __jsx(\"div\", null, __jsx(TagOutlined, {\n      className: \"right20\"\n    }), this.props.post.tags.length > 0 ? this.props.post.tags.map(tag => __jsx(TagPart, {\n      key: tag.short,\n      tag: tag\n    })) : __jsx(\"span\", null, \"\\u65E0\\u6807\\u7B7E\")))), __jsx(If, {\n      condition: this.props.post.head_image !== ''\n    }, __jsx(\"a\", {\n      className: \"headimage image\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: this.props.post.head_image\n    }, __jsx(\"img\", {\n      src: this.props.post.head_image,\n      alt: this.props.post.title\n    }))), __jsx(\"section\", {\n      className: \"post-content\",\n      dangerouslySetInnerHTML: {\n        __html: this.props.post.content\n      }\n    }));\n  }\n\n}\n\nexport default PostContent;","map":null,"metadata":{},"sourceType":"module"}