{"ast":null,"code":"import \"antd/lib/page-header/style/css\";\nimport _PageHeader from \"antd/lib/page-header\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/skeleton/style/css\";\nimport _Skeleton from \"antd/lib/skeleton\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { EyeOutlined, CalendarOutlined, EditOutlined, TagOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport Image, { setImageLightbox } from '@/components/image';\nimport If from '@/components/if';\nimport TagPart from '@/components/tag';\nimport { Context } from '@/utils/global';\nimport { travels_get_url } from '@/utils/api';\nimport styles from '@/pages/post/post.less';\nimport Carousel from './carousel';\nimport { Space } from './container';\n\nclass PostContent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"isTravel\", () => {\n      return this.props.post.tags.filter(item => item.name === '游记' && item.short === 'travels').length > 0;\n    });\n\n    _defineProperty(this, \"getTravelData\", () => {\n      travels_get_url(this.props.post.url).then(r => {\n        if (r.exist) {\n          this.setState({\n            travel: r.travel\n          });\n        }\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"renderTravel\", () => {\n      const travel = this.state.travel;\n\n      if (!!travel) {\n        const lnglat = `${travel.lng},${travel.lat}`;\n        return __jsx(\"details\", null, __jsx(\"summary\", null, \"\\u6E38\\u8BB0\\u8BE6\\u7EC6\\u4FE1\\u606F\"), __jsx(Image, {\n          clickable: true,\n          height: '512px',\n          maxHeight: \"50vh\",\n          src: `https://restapi.amap.com/v3/staticmap?location=${lnglat}&zoom${travel.zoom}&scale=2&size=1024*1024&markers=mid,,A:${lnglat}&key=5918961af3c0ffafa1a3cb1056556c98`,\n          alt: `${travel.name}地图`,\n          title: `${moment(travel.time, 'X').format('YYYY-MM-DD')} 于 ${travel.name}`\n        }), __jsx(\"p\", {\n          style: {\n            textAlign: 'center',\n            fontSize: '1.25em'\n          }\n        }, \"\\u8BE5\\u6587\\u7AE0\\u662F\\u4E00\\u7BC7 \", __jsx(\"strong\", null, moment(travel.time, 'X').format('YYYY-MM-DD')), \" \\u4E8E\", ' ', __jsx(\"strong\", null, travel.name), \" \\u7684\\u6E38\\u8BB0\\uFF0C \\u66F4\\u591A\\u6E38\\u8BB0\\u89C1\", __jsx(\"a\", {\n          href: \"/apps/travels\",\n          target: \"_blank\"\n        }, \"\\u6E38\\u8BB0\\u5217\\u8868\")));\n      } else {\n        return null;\n      }\n    });\n\n    this.state = {\n      travel: undefined\n    };\n  }\n\n  resetImage() {\n    const containers = document.getElementsByClassName('image');\n\n    for (var i = 0; i < containers.length; i++) {\n      const imgs = containers[i].getElementsByTagName('img');\n\n      for (var j = 0; j < imgs.length; j++) {\n        setImageLightbox(imgs[j]);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.resetImage();\n\n    if (this.isTravel()) {\n      this.getTravelData();\n    }\n  }\n\n  componentDidUpdate() {\n    this.resetImage();\n  }\n\n  render() {\n    return this.props.post === undefined ? __jsx(_Skeleton, {\n      active: true\n    }) : __jsx(\"article\", {\n      className: styles.post\n    }, __jsx(Space, {\n      size: 20\n    }, __jsx(_PageHeader, {\n      className: \"shadow\",\n      title: this.props.post.title\n    }, __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"right20\"\n    }, __jsx(EyeOutlined, {\n      className: \"right5\"\n    }), this.props.post.view), __jsx(\"div\", {\n      className: \"right20\"\n    }, __jsx(CalendarOutlined, {\n      className: \"right5\"\n    }), this.props.post.publish_time), this.props.post.publish_time == this.props.post.edit_time ? null : __jsx(\"div\", {\n      className: \"right20\"\n    }, __jsx(EditOutlined, {\n      className: \"right5\"\n    }), this.props.post.edit_time), __jsx(Context.Consumer, null, context => (context.user.permission & 1) == 1 ? __jsx(Link, {\n      href: `/admin/post?url=${this.props.post.url}`\n    }, __jsx(_Button, {\n      type: \"primary\",\n      size: \"small\"\n    }, \"\\u7F16\\u8F91\")) : null), __jsx(If, {\n      condition: !!this.props.post.abstract\n    }, __jsx(\"blockquote\", null, this.props.post.abstract)), __jsx(\"div\", null, __jsx(TagOutlined, {\n      className: \"right20\"\n    }), this.props.post.tags.length > 0 ? this.props.post.tags.map(tag => __jsx(TagPart, {\n      key: tag.short,\n      tag: tag\n    })) : __jsx(\"span\", null, \"\\u65E0\\u6807\\u7B7E\")))), this.renderTravel(), __jsx(If, {\n      condition: !!this.props.post.images\n    }, __jsx(Carousel, {\n      images: this.props.post.images,\n      height: '500px',\n      maxHeight: '50vh',\n      autoplay: true\n    })), __jsx(\"section\", {\n      className: \"post-content\",\n      dangerouslySetInnerHTML: {\n        __html: this.props.post.content\n      }\n    })));\n  }\n\n}\n\nexport default PostContent;","map":null,"metadata":{},"sourceType":"module"}