{"ast":null,"code":"import \"antd/lib/tag/style/css\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/avatar/style/css\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport styles from './tag.less';\n\nvar TagPart = /*#__PURE__*/function (_React$Component) {\n  _inherits(TagPart, _React$Component);\n\n  var _super = _createSuper(TagPart);\n\n  function TagPart(props) {\n    _classCallCheck(this, TagPart);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(TagPart, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return typeof this.props.tag === 'undefined' ? null : __jsx(_Tag, {\n        className: styles.tag,\n        color: this.props.tag.color,\n        closable: this.props.closable,\n        onClose: function onClose() {\n          _this.props.onClose(_this.props.tag);\n        }\n      }, __jsx(Link, {\n        href: '/tag/[tag]',\n        as: \"/tag/\".concat(this.props.tag[\"short\"])\n      }, __jsx(\"a\", null, this.props.tag.icon ? __jsx(_Avatar, {\n        size: 15,\n        shape: \"circle\",\n        src: this.props.tag.icon\n      }) : null, this.props.tag.name)));\n    }\n  }]);\n\n  return TagPart;\n}(React.Component);\n\n_defineProperty(TagPart, \"defaultProps\", {\n  closable: false,\n  onClose: function onClose() {}\n});\n\nexport default TagPart;","map":null,"metadata":{},"sourceType":"module"}