{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/drawer/style/css\";\nimport _Drawer from \"antd/lib/drawer\";\nimport \"antd/lib/timeline/style/css\";\nimport _Timeline from \"antd/lib/timeline\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/spin/style/css\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/input-number/style/css\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { StarFilled, MoreOutlined } from '@ant-design/icons';\nimport { Map, Marker } from 'react-amap';\nimport moment from 'moment';\nimport Container from '@/components/container';\nimport { Context } from '@/utils/global';\nimport { waitUntil } from '@/utils/debounce';\nvar key = '81533a71a4db0eb8107620d99b954d9d';\n\nvar Travel = /*#__PURE__*/function (_React$Component) {\n  _inherits(Travel, _React$Component);\n\n  var _super = _createSuper(Travel);\n\n  function Travel(props) {\n    var _this;\n\n    _classCallCheck(this, Travel);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"context\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"getZoom\", function () {\n      return typeof _this.state.ins === 'undefined' ? 0 : _this.state.ins.view.Ge.zoom;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPos\", function () {\n      return typeof _this.state.ins === 'undefined' ? {\n        lng: 0,\n        lat: 0\n      } : {\n        lng: _this.state.ins.view.Ge.center.lng,\n        lat: _this.state.ins.view.Ge.center.lat\n      };\n    });\n\n    _this.state = {\n      lng: 108,\n      lat: 34,\n      zoom: 4,\n      drawer: false\n    };\n    return _this;\n  }\n\n  _createClass(Travel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Input = function Input(props) {\n        return __jsx(_InputNumber, {\n          value: _this2.state[props.name],\n          onChange: function onChange(v) {\n            waitUntil(\"map_input_\".concat(props.name), function () {\n              var num = parseFloat(v.toString());\n\n              var obj = _defineProperty({}, props.name, isNaN(num) ? 0 : num);\n\n              _this2.setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), obj);\n              });\n            }, 200);\n          }\n        });\n      };\n\n      return __jsx(Container, null, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u6E38\\u8BB0|\".concat(context.blog_name)));\n      }), __jsx(_Card, null, __jsx(Input, {\n        name: \"lng\"\n      }), __jsx(Input, {\n        name: \"lat\"\n      }), __jsx(Input, {\n        name: \"zoom\"\n      }), __jsx(\"div\", {\n        style: {\n          width: '100%',\n          height: '80vh',\n          overflow: 'hidden'\n        }\n      }, __jsx(Map, {\n        amapkey: key,\n        zoom: this.state.zoom,\n        center: {\n          lng: this.state.lng,\n          lat: this.state.lat\n        },\n        loading: __jsx(_Spin, null),\n        mapStyle: this.context.theme === 'default' ? 'amap://styles/normal' : 'amap://styles/dark',\n        events: {// created: (ins) => {\n          //   console.log(ins);\n          //   this.setState({ ins });\n          //   //   window.m = ins;\n          // },\n          // click: (a, b) => {\n          //   console.log('click', a, b);\n          // },\n          // mapmove: (a, b) => {\n          //   waitUntil(\n          //     'map_move',\n          //     () => {\n          //       console.log('move', a, b, this.state.ins.view.Ge);\n          //       this.setState(this.getPos());\n          //     },\n          //     200,\n          //   );\n          // },\n          // zoomend: (a, b) => {\n          //   waitUntil(\n          //     'map_move',\n          //     () => {\n          //       console.log('zoom', a, b);\n          //       this.setState({\n          //         zoom: this.getZoom(),\n          //       });\n          //     },\n          //     200,\n          //   );\n          // },\n        }\n      }, __jsx(_Button, {\n        icon: __jsx(MoreOutlined, null),\n        type: \"primary\",\n        shape: \"circle\",\n        style: {\n          position: 'absolute',\n          left: '10px',\n          top: '10px'\n        },\n        onClick: function onClick() {\n          return _this2.setState(function (state) {\n            return {\n              drawer: !state.drawer\n            };\n          });\n        }\n      }), __jsx(_Drawer, {\n        getContainer: false,\n        closable: false,\n        onClose: function onClose() {\n          return _this2.setState({\n            drawer: false\n          });\n        },\n        visible: this.state.drawer,\n        placement: \"left\",\n        style: {\n          position: 'absolute'\n        }\n      }, __jsx(_Timeline, {\n        mode: 'left'\n      }, this.props.cities.map(function (item) {\n        return __jsx(_Timeline.Item, {\n          label: moment(item.time, 'X').format('YYYY-MM-DD')\n        }, item.name);\n      }))), this.props.cities.map(function (item) {\n        return __jsx(Marker, {\n          position: {\n            longitude: item.lng,\n            latitude: item.lat\n          },\n          title: \"\".concat(item.name, \"-\").concat(moment(item.time, 'X').format('YYYY-MM-DD'))\n        }, __jsx(StarFilled, {\n          style: function () {\n            var color = _this2.context.theme === 'default' ? 'red' : 'yellow';\n            var filter = \"drop-shadow(0px 0px 10px \".concat(color, \")\");\n            return {\n              color: color,\n              filter: \"\".concat(filter, \" \").concat(filter)\n            };\n          }()\n        }));\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      return {\n        cities: [{\n          name: '乌镇',\n          time: 1593043200,\n          lng: 120.775513,\n          lat: 30.729425\n        }]\n      };\n    }\n  }]);\n\n  return Travel;\n}(React.Component);\n\n_defineProperty(Travel, \"contextType\", Context);\n\n_defineProperty(Travel, \"defaultProps\", {\n  cities: []\n});\n\nexport default Travel;","map":null,"metadata":{},"sourceType":"module"}